(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    636717,      15759]
NotebookOptionsPosition[    582188,      14009]
NotebookOutlinePosition[    588423,      14139]
CellTagsIndexPosition[    586741,      14109]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["  Introduction", "Chapter",
 CellChangeTimes->{{3.6885295326450014`*^9, 3.688529534507243*^9}, {
  3.6885334362351274`*^9, 3.6885334383315253`*^9}}],

Cell[CellGroupData[{

Cell["\[Pi] is indicated by Pi", "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886265537430763`*^9}}],

Cell[TextData[{
 "nearly all operations in  ",
 StyleBox["Mathematica returns after manipulating and do not change the \
actual value, so we have to take it as return we we want to change.",
  FontSlant->"Italic"],
 "\n"
}], "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886266353726034`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language"
}], "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627417488896*^9}}],

Cell["It uses camel Notation for function names", "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627440016356*^9}, {
  3.690084215025635*^9, 3.69008421658568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.688528217802491*^9, 3.6885282180186357`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.6885283234509974`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"finding", " ", "numerical", " ", "value", " ", "of", " ", 
  "something", " ", "we", " ", "can", " ", "use", " ", 
  RowBox[{"N", "[", 
   RowBox[{"<", "value", ">"}], "]"}], " ", "or", " ", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"<", "value", ">"}], ",", 
    RowBox[{"int_precision", "_digits"}]}], "]"}]}]], "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.688528345134454*^9}, {
  3.6885283780363903`*^9, 3.688528418549918*^9}}],

Cell[CellGroupData[{

Cell["N[Pi]", "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.6885283694006305`*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.6885283698259144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "20"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058209394`20.\
"], "Output",
 CellChangeTimes->{3.6885283922388563`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language so,"
}], "Item",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{
  3.688528603288143*^9, {3.68852865840989*^9, 3.6885286870689974`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "pi"}]], "Input",
 CellChangeTimes->{{3.688528680402551*^9, 3.6885286822677946`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "pi"}]], "Output",
 CellChangeTimes->{3.6885286828661933`*^9}]
}, Open  ]],

Cell["which is not 2*Pi", "Item",
 CellChangeTimes->{{3.688528697031164*^9, 3.6885287149891357`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6885289754780283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", "21.8", "]"}], " ", "//", 
  RowBox[{"round", " ", "to", " ", "nearest", " ", "integer"}]}]], "Input",
 CellChangeTimes->{{3.688528909335933*^9, 3.6885289365840983`*^9}, {
  3.6885290718191867`*^9, 3.688529077141736*^9}}],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.6885289169850335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{"21.6", ",", "0.5"}], "]"}], "//", 
  RowBox[{
  "round", " ", "to", " ", "nearest", " ", "multipleof", " ", 
   "0.5"}]}]], "Input",
 CellChangeTimes->{{3.688529080169756*^9, 3.6885291126594152`*^9}}],

Cell[BoxData["21.5`"], "Output",
 CellChangeTimes->{3.688529095696106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding comments and documentation", "Section",
 CellChangeTimes->{{3.6900836043330193`*^9, 3.6900836167172756`*^9}}],

Cell[CellGroupData[{

Cell[" for comment we can use (* and *) in mathematica", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083633514475*^9}}],

Cell["\<\
when we define a function we may add some documentation to it so that any one \
can easily able to understand the basic functionality of that funciton.\
\>", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083681905259*^9}, {
  3.6900863518430333`*^9, 3.6900863529417644`*^9}}],

Cell["\<\
 for getting help about any method we can use ?<function_name> \
\>", "Item",
 CellChangeTimes->{{3.6900837201715956`*^9, 3.690083746236973*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ex", " ", "-", 
  RowBox[{"for", " ", "Plot", " ", "function", " "}]}]], "Input",
 CellChangeTimes->{{3.6900837488957458`*^9, 3.6900837573904085`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Plot"}]], "Input",
 CellChangeTimes->{{3.6900837606615906`*^9, 3.6900837618764*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\
\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) takes \
the variable \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to be in the \
geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690083762330702*^9},
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "exp_"}], "]"}], ":=", 
   RowBox[{"a", "^", "exp"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69008368494158*^9, 3.6900837036460495`*^9}}],

Cell["\<\
for adding help or documentation we need to use usage keyword\
\>", "Item",
 CellChangeTimes->{{3.6900837082336383`*^9, 3.690083714862057*^9}, {
  3.6900837860995474`*^9, 3.690083806902943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "::", "usage"}], "=", 
   "\"\< gives a to the power exp \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.690083841583583*^9, 3.690083870727542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "power"}]], "Input",
 CellChangeTimes->{{3.690083875385648*^9, 3.6900838852942533`*^9}}],

Cell[BoxData[
 StyleBox["\<\" gives a to the power exp \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900838858596306`*^9},
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6900839035979924`*^9}],

Cell[RawData["\<\
->{654, 659},

WindowMargins->{{Automatic, 21}, {Automatic, 0}},

PrintingCopies->1,

PrintingPageRange->{32000,\
\>"], "Section"],

Cell[CellGroupData[{

Cell["\<\
 one of the most ofter problem in mathematica is that the variables and \
function do not go away if we create a new notebook they remain in RAM.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900843754802685`*^9}}],

Cell["\<\
so if i define a variable and create a new notebook then i will be able to \
find it there as well, it might cause some problem so Clear[] if some problem \
occurs.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900844199196663`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Suppressing output in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900803261073084`*^9, 3.690080332727719*^9}}],

Cell[CellGroupData[{

Cell["\<\
 generally mathematica evaluates each and every line and show output for it\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.690080356164878*^9}}],

Cell["\<\
if we do not want output for some line we can suppress output using \
semicolon(;), this is same as matlab\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804222783227`*^9}}],

Cell["\<\
we will do it when we wanted mathematica to execute that line but do not show \
us output of that.(for execution shift+enter)\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804693807273`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "be", " ",
     "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080390454107*^9, 3.6900804032316275`*^9}, {
  3.6900804787934313`*^9, 3.6900804925245857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6900803968813915`*^9, 3.6900804754617777`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"var2", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "not", 
    " ", "be", " ", "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080398033159*^9, 3.690080411391066*^9}, {
  3.690080498132325*^9, 3.6900805103598995`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Mathematical Operators", "Chapter"]
}], "Text",
 CellChangeTimes->{{3.688529468982561*^9, 3.6885294861860294`*^9}, {
   3.6885295416740227`*^9, 3.6885295450132484`*^9}, 3.688529780520404*^9, {
   3.690080513256835*^9, 3.690080514789852*^9}}],

Cell[CellGroupData[{

Cell["+ and - for add and subtract", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529660721456*^9}}],

Cell[" * or space for multiplication so (a b) is same as (a*b)", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529708840536*^9}}],

Cell["/ for division and ^ for power\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529749148962*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["    Mathematical Functions", "Chapter",
 CellChangeTimes->{{3.6885297639833784`*^9, 3.688529801579443*^9}, 
   3.690080313795106*^9}],

Cell[CellGroupData[{

Cell["Mod[x,y] return reminder", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529830407662*^9}, {
  3.6902188186484456`*^9, 3.6902188212538404`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the remainder on division of \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) by \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses an offset \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Mod"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902188323477645`*^9},
 CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"],

Cell["Quotient[x,y] returns quotient of division", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.6885298487628984`*^9}}],

Cell["\<\
N[x] returns numerical represenation of fraction or other expression\
\>", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688532999654775*^9}}],

Cell["N[x,n] return numerical value upto n digits after decimal", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.688533286219251*^9}}],

Cell["BaseForm[x,b] convert base 10 number x in base b", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.68853331504747*^9}, {3.690218795977835*^9, 3.690218795982834*^9}}],

Cell["Factor[poly] factorise polynomial", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.68853331504747*^9}, {3.690218795977835*^9, 3.6902187986082325`*^9}, {
  3.6902188475300674`*^9, 3.6902188567140203`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", StyleBox[\\\"poly\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) factors a polynomial over the integers. \\n\
\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"Modulus\\\", \\\"\[Rule]\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) factors a polynomial \
modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}]}], \\\"]\\\"}]\\) factors a \
polynomial allowing coefficients that are rational combinations of the \
algebraic numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factor"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902188610646815`*^9},
 CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prime Number functions", "Subsection",
 CellChangeTimes->{{3.6902269731899014`*^9, 3.6902269779874964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Prime\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)\\!\\(\\*RowBox[{SuperscriptBox[\\\
\"\[Null]\\\", \\\"th\\\"], \\\" \\\"}]\\)prime number. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Prime"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902269156615095`*^9},
 CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NextPrime\\\", \\\"[\\\", StyleBox[\\\"n\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the next prime above \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NextPrime\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) prime \
above \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NextPrime"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902270167790923`*^9},
 CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimePi\\\", \\\"[\\\", StyleBox[\\\"x\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the number of primes \
\\!\\(\\*RowBox[{StyleBox[\\\"\[Pi]\\\", \\\"TR\\\"], RowBox[{\\\"(\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\")\\\"}]}]\\) less than or equal to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrimePi"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690227212944149*^9},
 CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimePi", "[", "10", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "of", " ", "primes", " ", "up", " ", "to", " ", "10"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690227223105719*^9, 3.690227243649035*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.690227229444473*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6902270800187817`*^9, 3.690227246214426*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"16", " ", "Pi"}]], "Input",
 CellChangeTimes->{{3.6885299265385976`*^9, 3.6885299369955683`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688529937695036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"16", "Pi"}], "]"}]], "Input",
 CellChangeTimes->{{3.688529939550272*^9, 3.688529949569951*^9}}],

Cell[BoxData["50.26548245743669`"], "Output",
 CellChangeTimes->{3.688529950224387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333191932335`*^9, 3.688533331346336*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"202\"\>", "\<\"3\"\>"],
   20,
   Editable->False],
  BaseForm[#, 3]& ]], "Output",
 CellChangeTimes->{3.6885333317806263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333379397316`*^9, 3.6885333438876967`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"40\"\>", "\<\"5\"\>"],
   20,
   Editable->False],
  BaseForm[#, 5]& ]], "Output",
 CellChangeTimes->{3.6885333443480034`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"1", "+", 
   RowBox[{"x", " ", "^", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902188805152545`*^9, 3.6902189126346474`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "x", "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6902188932941566`*^9, 3.6902189131147213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series[] function expands a function ", "Item",
 CellChangeTimes->{{3.6902189865301065`*^9, 3.690218997378845*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}]\\) generates a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\
\", \\\"TI\\\"]\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"=\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]\\) to order \
\\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\"-\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}], \\\")\\\"}], StyleBox[\\\"n\\\", \\\"TI\\\
\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) successively finds series \
expansions with respect to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), then \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), etc. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Series"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902190022228327`*^9},
 CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   FractionBox[
    SuperscriptBox["x", "10"], "3628800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880], 
    Rational[1, 3628800]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.690219152103537*^9}]
}, Open  ]],

Cell[" normal removes last term", "Item",
 CellChangeTimes->{{3.690219175889924*^9, 3.69021919669075*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"this", " ", "is", " ", "expansion", " ", "for", " ", 
     RowBox[{"e", "^", "x"}], " ", "from", " ", "x"}], "=", 
    RowBox[{"0", " ", "to", " ", "10"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902190086450214`*^9, 3.6902191205174847`*^9}, {
  3.690219163342429*^9, 3.690219163576818*^9}, {3.690219200019038*^9, 
  3.6902192242918825`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "x", "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"], "+", 
  FractionBox[
   SuperscriptBox["x", "10"], "3628800"]}]], "Output",
 CellChangeTimes->{{3.6902190192320604`*^9, 3.690219120908128*^9}, 
   3.6902191644518595`*^9, 3.6902192254481926`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6902192415114775`*^9, 3.690219277191023*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "-", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"]}]], "Output",
 CellChangeTimes->{{3.6902192566401424`*^9, 3.690219277487913*^9}}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.6902192289171085`*^9, 3.690219240011406*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Referring to previous calculations", "Chapter",
 CellChangeTimes->{{3.688530021543882*^9, 3.688530039861616*^9}}],

Cell[CellGroupData[{

Cell["\<\
one of the most important feature of mathematica is that it can refer to \
previously done calculations and this is the reason why every \
calculation(input as well as output) have a number associated with it. ex- \
In[11] and Out[11]\
\>", "Item",
 CellChangeTimes->{{3.688530043333932*^9, 3.6885301478771477`*^9}}],

Cell["\<\
if we wanted to refer to last previous output then use % sign \
\>", "Item",
 CellChangeTimes->{{3.6885301828224955`*^9, 3.6885302233019495`*^9}, 
   3.68853039908873*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"%", "  ", "//", 
  RowBox[{
  "which", " ", "as", " ", "the", " ", "last", " ", "output"}]}]], "Input",
 CellChangeTimes->{{3.6885302339070196`*^9, 3.6885302428199625`*^9}}],

Cell[BoxData[{"50.26548245743669`", "\[IndentingNewLine]", "%11"}], "Input",
 CellChangeTimes->{{3.6885303802011385`*^9, 3.688530381565048*^9}}],

Cell[CellGroupData[{

Cell[BoxData["50.26548245743669"], "Input",
 CellChangeTimes->{{3.6885303846571093`*^9, 3.6885303869966693`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688530382085395*^9}]
}, Open  ]],

Cell["\<\
 to work with output no 11 we can use %11 or Out[11], this will acts as \
variable\
\>", "Item",
 CellChangeTimes->{{3.68853032207285*^9, 3.6885303468509054`*^9}, {
  3.688530408738163*^9, 3.6885304269212875`*^9}}],

Cell[BoxData["%11"], "Input",
 CellChangeTimes->{{3.688530370114414*^9, 3.688530370897936*^9}, {
  3.6885304195173492`*^9, 3.6885304196054087`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Input",
 CellChangeTimes->{3.6885304302625136`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Out", "[", "11", "]"}]], "Input",
 CellChangeTimes->{{3.6885304395427003`*^9, 3.6885304421219435`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6885304427433577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Using variables", "Chapter",
 CellChangeTimes->{{3.688530491307227*^9, 3.6885305078562593`*^9}}],

Cell[CellGroupData[{

Cell[" rules for creating variables are same as C", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.688531103264761*^9}}],

Cell["\<\
_(underscore ) can \[OpenCurlyQuote]t be used here, because we use them in \
function definitions for variables\
\>", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.6885311162213984`*^9}, {3.690081363396265*^9, 
  3.6900813936439314`*^9}}],

Cell["\<\
rules of variables applied to all identifiers(function names etc.)\
\>", "Item",
 CellChangeTimes->{{3.690083198096404*^9, 3.6900832157601805`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "=", "20", " "}]], "Input",
 CellChangeTimes->{{3.6885305364793415`*^9, 3.6885305650834107`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], ":", 
  " ", "\<\"Cannot assign to raw object \[NoBreak]\\!\\(2\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", \
ButtonNote -> \\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6885305397855453`*^9, 3.6885305728756056`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.688530539786546*^9, 3.68853056755606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "20"}]], "Input",
 CellChangeTimes->{{3.6885310357250586`*^9, 3.688531036352477*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310368668194`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "*", 
   RowBox[{"20", "/", "3"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688531038107647*^9, 3.688531040150008*^9}}],

Cell[BoxData[
 FractionBox["400", "3"]], "Output",
 CellChangeTimes->{3.688531042056279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_a", "=", "20", "  "}]], "Input",
 CellChangeTimes->{{3.6885310493341317`*^9, 3.688531050987753*^9}, {
  3.6885311276900473`*^9, 3.6885311375666285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(Blank[20]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.688531053821642*^9, 3.6885311395679636`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310538226423`*^9, 3.688531139570965*^9}]
}, Open  ]],

Cell["for clearing a variable we can use Clear[var_name] method.", "Item",
 CellChangeTimes->{{3.690084232620372*^9, 3.69008424907656*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Importing and Exporting data from Files", "Chapter",
 CellChangeTimes->{{3.6885311979479165`*^9, 3.688531236500763*^9}}],

Cell[CellGroupData[{

Cell["\<\
Import[\[OpenCurlyDoubleQuote]<file_path>\[CloseCurlyDoubleQuote]] is the \
function which is used to import data \
\>", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885320981192503`*^9}}],

Cell["file_path could be absolute path, relative path or url", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885322828733687`*^9}}],

Cell["file could be text , csv(stylesheet) , gif or any type", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885323081722355`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\info.txt\>\"", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688532161243333*^9, 3.6885321915235205`*^9}, {
  3.6885322545504866`*^9, 3.6885322557282724`*^9}, {3.688532312865365*^9, 
  3.688532313918066*^9}}],

Cell[BoxData["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>"], "Output",
 CellChangeTimes->{3.6885322562956505`*^9, 3.6885323155731688`*^9, 
  3.6885324268019075`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6885322501195335`*^9, 3.6885322525321417`*^9}}],

Cell["\<\
for showing data in table form we can use TableForm[data_list] function\
\[LineSeparator]\
\>", "Item",
 CellChangeTimes->{{3.6885323280504875`*^9, 3.6885323614402733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "var", "]"}]], "Input",
 CellChangeTimes->{{3.6885323641670895`*^9, 3.688532368317384*^9}}],

Cell[BoxData[
 TagBox["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.68853236871865*^9, 3.688532429690833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similarly for exporting we use Export[\[OpenCurlyDoubleQuote]file_path\
\[CloseCurlyDoubleQuote],variable_name].\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.688532579946594*^9}}],

Cell["\<\
if file specified in file_path not available file will be created.\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.6885325786667414`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\>\"", ",", 
   "var"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885325844415903`*^9, 3.6885326163466578`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\"\>\
"], "Output",
 CellChangeTimes->{3.6885326168399878`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Built-in Functions", "Chapter",
 CellChangeTimes->{{3.6885327175877914`*^9, 3.6885327347932615`*^9}}],

Cell[CellGroupData[{

Cell["Sqrt[x] find square root", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532753016412*^9}}],

Cell["\<\
IntegerPart[x] returns integer part  of a fraction, similarly we have \
FractionalPart[x] for fractional part\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327689680448`*^9}, {
  3.696445788604454*^9, 3.696445809004145*^9}}],

Cell["Ceiling[x]  and Floor[x] make integer up and down", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327995389547`*^9}}],

Cell["Round[x] rounds number  (.5 or heigher goes up) ", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532857512923*^9}}],

Cell["\<\
Max[x]  and Min[x] finds largest and smallest number in input set\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885328863131213`*^9}}],

Cell["Factorial[x] or x! finds factorial of a number( e.g- 5!=120)", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.6885331690454473`*^9}}],

Cell["\<\
we can apply each function on list and then we get ans as list also\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.688533183769263*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "196", "]"}]], "Input",
 CellChangeTimes->{{3.688533052503008*^9, 3.6885330580507064`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.6885330585500383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Pi", "*", "4"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533061473988*^9, 3.68853307320533*^9}}],

Cell[BoxData["12.56637061435917295385057353311801153679`10."], "Output",
 CellChangeTimes->{{3.6885330677151504`*^9, 3.688533073553562*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
   "12", ",", "32.23", ",", "3.2", ",", "42", ",", "23.2", ",", "1", ",", 
    "123"}], "}"}], " ", 
  RowBox[{"(*", " ", "list", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.688533076408465*^9, 3.6885331343733344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.6885330977418375`*^9, 3.6885331370060883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885330998902717`*^9, 3.6885331032234945`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.688533103854913*^9, 3.6885331392705975`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6885331525584555`*^9, 3.688533153208889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.688533153577135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885331048175545`*^9, 3.6885331101170883`*^9}}],

Cell[BoxData["3242"], "Output",
 CellChangeTimes->{3.6885331105163555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.688533111765188*^9, 3.6885331156467752`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32", ",", "3", ",", "42", ",", "23", ",", "1", ",", "123"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6885331160581217`*^9, 3.6885331421955476`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", "!"}], " ", 
  RowBox[{"(*", "factorial", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6885332047612576`*^9, 3.6885332131999273`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.6885332072389097`*^9, 3.6885332152092657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.688533217426709*^9, 3.6885332304613996`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.688533224179211*^9, 3.688533230847659*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"120", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533258924054*^9, 3.688533273071486*^9}, 
   3.6885337311014566`*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"78\"\>", "\<\"16\"\>"],
   120,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 CellChangeTimes->{{3.688533250795993*^9, 3.6885332736898985`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Lists in Mathematica", "Chapter",
 CellChangeTimes->{{3.688624847492653*^9, 3.6886248522163324`*^9}, 
   3.6886271218098583`*^9}],

Cell["list are specified by {} as function are defined by []", "Item",
 CellChangeTimes->{{3.6886248542436857`*^9, 3.688624876542077*^9}}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6886248529988565`*^9}],

Cell[CellGroupData[{

Cell["    Creating a list", "Section",
 CellChangeTimes->{{3.6886249526162453`*^9, 3.6886249661252537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68862499679342*^9, 3.688625002615301*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886250034008265`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Range[] function generates a list of numbers ", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.688625071369671*^9}, {
  3.696445937140542*^9, 3.6964459502232523`*^9}}],

Cell["Range[max] generates list {1,2,3,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886250888488564`*^9}}],

Cell["Range[min,max] generates list{min,min+1,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886251093470416`*^9}, {
  3.696445962542768*^9, 3.696445966953684*^9}}],

Cell["Range[min,max,step] generates list{min,min+step,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886251093470416`*^9}, {
  3.696445962542768*^9, 3.6964459799484916`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.6886253007403865`*^9, 3.6886253055221395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688625305909402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886253074924517`*^9, 3.6886253145051303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",",
    "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.688625314893384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.688625316375372*^9, 3.6886253213546925`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{3.6886253218900485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", "+", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886252541902623`*^9, 3.68862527351868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"2", "+", "x"}], ",", 
   RowBox[{"3", "+", "x"}], ",", 
   RowBox[{"4", "+", "x"}], ",", 
   RowBox[{"5", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.68862526048746*^9, 3.6886252740540376`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" Referring and Editing a list", "Chapter"]], "Section",
 CellChangeTimes->{3.688627257235835*^9}],

Cell[CellGroupData[{

Cell["\<\
we have to use double square brackets for referring a list items\
\>", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257654908166`*^9}}],

Cell["indexing starts from 1 same as matlab", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257725955534`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886256782145133`*^9, 3.688625685866618*^9}, {
  3.688625757013166*^9, 3.6886257578707376`*^9}, {3.6886257924063025`*^9, 
  3.688625801586054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688625686467016*^9, 3.6886257586182346`*^9, {3.6886257935130424`*^9, 
   3.6886258030400205`*^9}, 3.696446134319219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886257422638063`*^9, 3.6886257461363907`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.6886257468408585`*^9, 3.688625760122236*^9}, 
   3.696446135529027*^9}]
}, Open  ]],

Cell["\<\
we can use negating indexing for counting from end (same as python)\
\>", "Item",
 CellChangeTimes->{{3.6886270009161253`*^9, 3.688627016353941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626993308524*^9, 3.688626996951479*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.688626997659953*^9, 3.6964461369659843`*^9}]
}, Open  ]],

Cell["\<\
for multiple index values from list we have to use enter their indexes as list\
\>", "Item",
 CellChangeTimes->{{3.6886258103198767`*^9, 3.688625873811511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "values", " ", "of", " ", "index", " ", "2", " ", "and", " ", "4", " ", 
    "will", " ", "be", " ", "outputted"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.688625882952606*^9, 3.6886259070042048`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{{3.688625890483996*^9, 3.688625907906807*^9}, 
   3.6964461383048797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for range of values from index i to index j we have to use double semi \
colon(;;)\
\>", "Item",
 CellChangeTimes->{{3.6886259107196836`*^9, 3.688625944478739*^9}}],

Cell["\<\
example for indexes 2 to 4 we have to use 2;;4 instead of {2,3,4}(list of \
indexes)\
\>", "Item",
 CellChangeTimes->{{3.688625950754011*^9, 3.688626006273758*^9}, 
   3.6964460376165185`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626010042796*^9, 3.6886260165961614`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.688626016931387*^9, 3.696446140303209*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
   "OR", " ", "there", " ", "is", " ", "another", " ", "way", " ", "of", " ", 
    "using", " ", "Range", " ", "function"}], "\[IndentingNewLine]", 
   RowBox[{"elist", "[", 
    RowBox[{"[", 
     RowBox[{"Range", "[", 
      RowBox[{"2", ",", "4"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.696446079057591*^9, 3.696446110607777*^9}, {
  3.6964461587081614`*^9, 3.6964461614509826`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{{3.6964461101214447`*^9, 3.6964461112612057`*^9}, 
   3.6964461419793215`*^9}]
}, Open  ]],

Cell["changing value or multiple values could be done as referring", "Item",
 CellChangeTimes->{{3.6886260815879803`*^9, 3.688626103434834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", "100", 
  RowBox[{"(*", " ", 
   RowBox[{
   "value", " ", "of", " ", "index", " ", "2", " ", "has", " ", "been", " ", 
    "updated", " ", "to", " ", "100"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886261114662623`*^9, 3.688626170955255*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.688626123236109*^9, 3.688626137320779*^9}, 
   3.6886261716016865`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.6886261331690135`*^9, 3.6886261338244476`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "100", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.688626134140659*^9, 3.6886261392460623`*^9}, 
   3.688626175503291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", "4"}], "]"}], "]"}], "=", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "values", " ", "or", " ", "indexes", " ", "range", " ", "update", " ", 
    "to", " ", "2"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886260582478647`*^9, 3.688626064666142*^9}, {
  3.6886261798722*^9, 3.6886261979124165`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.688626065176484*^9, {3.6886261254305735`*^9, 3.688626141433521*^9}, 
   3.6886261986459055`*^9, 3.6964462210124044`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.696446216284252*^9, 3.696446217827284*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.696446218171502*^9, 3.6964462226354785`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"OR", " ", "we", " ", "can", " ", "use", " "}]], "Input",
 CellChangeTimes->{{3.6964461892546797`*^9, 3.696446191968226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", "4"}], "]"}], "]"}], "]"}], "=", "3"}]], "Input",
 CellChangeTimes->{{3.6964461978651485`*^9, 3.6964462134263515`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.696446224906993*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.688626067489029*^9, 3.688626069944228*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "3", ",", "3", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.6886260703164697`*^9, 3.6886261294012184`*^9, 
  3.68862620096445*^9, 3.6964462302545576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 we can use ReplacePart[] function to update many indexes at a  time\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626307762705*^9}}],

Cell["\<\
specially useful when indexes are not adjacenet to use range type (;;) or \
Range[]\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626331253887*^9}, {
  3.696446249047969*^9, 3.6964462542995186`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplacePart", "[", 
   RowBox[{"elist", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "10"}], ",", 
      RowBox[{"2", "\[Rule]", "20"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"index", " ", 
    RowBox[{"1", "'"}], "s", " ", "value", " ", "replaced", " ", "with", " ", 
    "10", " ", "and", " ", "so", " ", "on"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886263361403155`*^9, 3.688626396203935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.688626368933702*^9, 3.6886264014734507`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Adding and removing items from a list", "Section",
 CellChangeTimes->{{3.688626447919466*^9, 3.6886264586215997`*^9}}],

Cell[CellGroupData[{

Cell["Adding Items", "Subsection",
 CellChangeTimes->{{3.6886268875991397`*^9, 3.688626896938563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886264993215704`*^9, 3.6886265074990587`*^9}, 
   3.6964464685530963`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886265082015295`*^9, 3.696446471799261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "[", 
  RowBox[{"[", "11", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626509620476*^9, 3.6886265124503603`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(11\\)\[NoBreak] of \
\[NoBreak]\\!\\({10, 20, 30, 40, 50, 60, 70, 80, 90, 100}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6886265135560975`*^9, 3.696446473237228*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
    ",", "80", ",", "90", ",", "100"}], "}"}], "\[LeftDoubleBracket]", "11", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.688626513566107*^9, 3.696446473248226*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["error occured because only 10 items are there in list", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.688626654408106*^9}}],

Cell["\<\
We can use append[list,new_value] function to append new_value to list\
\>", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.6886266920583286`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Append", "[", 
   RowBox[{"flist", ",", "110"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "have", " ", "to", " ", "take", " ", "it", " ", "as", " ", 
    "returns", " ", "as", " ", "no", " ", "function", " ", "changes", " ", 
    "original"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886266974399157`*^9, 3.6886267056343784`*^9}, {
  3.6886267536449633`*^9, 3.688626789108124*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886267060626616`*^9, {3.6886267546296163`*^9, 3.6886267921806955`*^9}, 
   3.6964464816814413`*^9}]
}, Open  ]],

Cell["\<\
 for adding at beginnig we use Prepend[list,new_value] function\
\>", "Item",
 CellChangeTimes->{{3.6886268257082415`*^9, 3.6886268440390053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{"flist", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886268480696945`*^9, 3.688626864239524*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{3.6886268650830836`*^9, 3.696446484440283*^9}]
}, Open  ]],

Cell["\<\
 we can not also pass alist to be append or prepend as it will add it as \
single element.\
\>", "Item",
 CellChangeTimes->{{3.696446420230855*^9, 3.696446430726859*^9}, {
  3.6964465316208873`*^9, 3.696446545657915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Append", "[", 
   RowBox[{"flist", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696446488150755*^9, 3.6964464999152727`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.69644650049866*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{"flist", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696446503153432*^9, 3.696446517730626*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", "0", ",", "10", ",", "20", ",", "30", 
   ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", 
   "100", ",", "110", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.696446518160918*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting item ", "Subsection",
 CellChangeTimes->{{3.688626907713749*^9, 3.6886269125579767`*^9}}],

Cell["\<\
 we can use Delete[list,index] function to delete a specific value from list\
\>", "Item",
 CellChangeTimes->{{3.688626936112668*^9, 3.688626955706931*^9}}],

Cell[CellGroupData[{

Cell[BoxData["flist"], "Input",
 CellChangeTimes->{{3.688626960344025*^9, 3.6886269608013277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "110"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688626961366704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Delete", "[", 
   RowBox[{"flist", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688626964453763*^9, 3.6886269675668373`*^9}, {
  3.6886270265509357`*^9, 3.6886270344441986`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", 
   "80", ",", "90", ",", "100", ",", "110", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{3.6886270350826263`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   List Counting and Math Functions", "Section",
 CellChangeTimes->{{3.688627269529029*^9, 3.688627289447833*^9}, {
  3.688627319809716*^9, 3.688627345671957*^9}, {3.688628529152068*^9, 
  3.688628535594363*^9}}],

Cell["length of a list can be find by Length[list] function", "Item",
 CellChangeTimes->{{3.6886273520712223`*^9, 3.6886273809754934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886274506514454`*^9, 3.688627490068722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.688627475714153*^9, 3.688627490404947*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688627493591071*^9, 3.688627500150446*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6886275005677233`*^9}]
}, Open  ]],

Cell["\<\
occurance of a number can be counted using Count[list,num] function\
\>", "Item",
 CellChangeTimes->{{3.6886275082748632`*^9, 3.688627529774194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"alist", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.688627532623092*^9, 3.688627539799411*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6886275405749254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for searching a number in list we can use Position[list,num] function \
\>", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.688627901033841*^9}}],

Cell["it returns indexes in form of list of list ", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.6886279091152306`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.68862759120172*^9, 3.6886276080549583`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "10", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6886275948841767`*^9, 3.688627608552287*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688627642158692*^9, 3.688627657458892*^9}, {
  3.6886277798478823`*^9, 3.68862778576883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.688627657888179*^9, {3.6886278780365105`*^9, 3.688627880861395*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886276585796385`*^9, 3.688627668843481*^9}, {
   3.6886277961807704`*^9, 3.6886277974446135`*^9}, 3.68862785626589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6886276657754374`*^9, 3.6886276691436815`*^9}, 
   3.688627883104888*^9}]
}, Open  ]],

Cell["we can use Flatten[2dlist] flat a matrix as a list(vector)", "Item",
 CellChangeTimes->{{3.6886279167142982`*^9, 3.688627951508492*^9}}],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{"alist", ",", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886279641989512`*^9, 3.6886279778335724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "6"}], "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "now", " ", "these", " ", "are", " ", "the", " ", "indexes", " ", "where", 
    " ", "10", " ", "exists"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886279874910126`*^9, 3.688628000053854*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.688627731474634*^9, 3.688627770188444*^9}}],

Cell[CellGroupData[{

Cell["Maths function for List", "Subsection",
 CellChangeTimes->{{3.688628045581306*^9, 3.688628054455222*^9}}],

Cell[CellGroupData[{

Cell["sum of list can be found by Total[list]", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.6886281087634273`*^9}}],

Cell["\<\
for mean use Mean[list] , it may be fraction so use N[Mean[list]]\
\>", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.688628144177762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886280841590257`*^9, 3.6886280941676974`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886280948151283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688628096633342*^9, 3.6886280987077246`*^9}}],

Cell[BoxData["550"], "Output",
 CellChangeTimes->{3.6886280990489516`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886281020309396`*^9, 3.6886281049709*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.6886281054091916`*^9}]
}, Open  ]],

Cell[" we can get Running total using Accumulate[list] function ", "Item",
 CellChangeTimes->{{3.688628179084264*^9, 3.6886281918968043`*^9}, {
  3.6886282648009443`*^9, 3.688628264804947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628196871122*^9, 3.6886282034254923`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6886282037707224`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Accumulate", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886282049565115`*^9, 3.6886282084828625`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
    "36", ",", "45", ",", "55"}], "}"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6886282594238224`*^9, 3.688628259430828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.688628260792737*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 difference b/w consecutive elements of list can be foundby Differences[list] \
method \
\>", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628401813552*^9}}],

Cell["it calculate differences using alist[i+1]-alist[i]", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628421612751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628335395689*^9, 3.688628344076478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68862834439669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886283459847493`*^9, 3.688628348264269*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6886283486115007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["similarly we can also find ratios of consecutive elements", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.688628448141507*^9}}],

Cell["ratios are calculate alist[i+1]/alist[i]", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.6886284590567837`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.688628383077479*^9, {3.688628424586735*^9, 3.688628425447307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688628464710553*^9, 3.6886284919357057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688628492335971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ratios", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886284930704613`*^9, 3.6886284982889395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["1", "4"], ",", "3", ",", 
   FractionBox["7", "3"], ",", 
   FractionBox["8", "7"]}], "}"}]], "Output",
 CellChangeTimes->{3.688628498755251*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Random Number Generation", "Section",
 CellChangeTimes->{{3.6886288524279566`*^9, 3.6886288628360505`*^9}}],

Cell["\<\
 Random[] was used initially but is not superseded by RandomInteger[] and \
RandomReal[]\
\>", "Item",
 CellChangeTimes->{{3.6964488513658276`*^9, 3.6964488801441574`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "Random", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", \\\"]\\\"}]\\) \
gives a uniformly distributed pseudorandom Real in the range 0 to 1. \
\\n\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", RowBox[{StyleBox[\\\"type\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"range\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives a pseudorandom number of the specified type, lying in the specified \
range. Possible types are: Integer, Real and Complex. The default range is 0 \
to 1. You can give the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]\\) explicitly; a range specification of \
\\!\\(\\*StyleBox[\\\"max\\\", \\\"TI\\\"]\\) is equivalent to \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Random"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.696448788439085*^9},
 CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Random", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6964490044055085`*^9, 3.6964490071844597`*^9}}],

Cell[BoxData["0.051587357821637356`"], "Output",
 CellChangeTimes->{3.6964490076647797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Random", "[", 
   RowBox[{"Integer", ",", "200"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Type", ",", "max"}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.696449008158109*^9, 3.6964490388364925`*^9}}],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{3.6964490154379673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Random", "[", 
   RowBox[{"Integer", ",", 
    RowBox[{"{", 
     RowBox[{"100", ",", "200"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Type", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6964490164376364`*^9, 3.696449056124127*^9}}],

Cell[BoxData["192"], "Output",
 CellChangeTimes->{3.6964490254576416`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.696448788500121*^9, 3.6964488086582603`*^9}},
 CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Integers", "Subsection",
 CellChangeTimes->{{3.6886290753218484`*^9, 3.6886290820263186`*^9}}],

Cell[CellGroupData[{

Cell["RandomInteger[max] gives a random integer from 0 to max", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289356077967`*^9}}],

Cell["\<\
RandomInteger[{min,max}] gives random integer from min to max ,CAREFUL watch \
{ and }\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289654376836`*^9}}],

Cell["RandomInteger[] gives 0 or 1", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.688628982026744*^9}}],

Cell["\<\
RandomInteger[max,n] generates list of n random number from 0 to max, that is \
why we used { } there in RandomInteger[{min,max}]\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290250812216`*^9}, {3.688629321969714*^9, 
  3.6886293345460987`*^9}, {3.6964473193659363`*^9, 3.696447339562049*^9}}],

Cell["\<\
RandomInteger[max,{n,m}] generates matrix of random number of dimention n*m
\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290614836226`*^9}, {3.688629091681755*^9, 
  3.688629098307171*^9}, {3.688629181927435*^9, 3.6886291911776013`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Reals", "Subsection",
 CellChangeTimes->{{3.6886291995121574`*^9, 3.6886292056692643`*^9}}],

Cell[CellGroupData[{

Cell["RandomReal[] gives real number b/w 0 and 1", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.688629248349717*^9}}],

Cell["RandomReal[max] gives random real b/w 0 and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292766668377`*^9}}],

Cell["RandomReal[{min,max}] gives random real b/w min and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292994220095`*^9}}],

Cell["\<\
RandomReal[max,n] generates list of n random real b/w 0 and max\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.6886293688639765`*^9}}],

Cell["\<\
RandomReal[max,{n,m}] generates matrix of random real b/w 0 and max of n*m\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.688629400529087*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", 
  RowBox[{
  "there", " ", "are", " ", "also", " ", "functions", " ", "like", " ", 
   "RandomPrime", " ", "which", " ", "generate", " ", "random", " ", "Prime", 
   " ", "number", " ", "and", " ", "syntax", " ", "is", " ", "like", " ", 
   RowBox[{"above", "."}]}]}]], "Input",
 CellChangeTimes->{{3.6886295249556136`*^9, 3.6886295330380006`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Sorting ,Reversing and Padding", "Section",
 CellChangeTimes->{{3.688628549078355*^9, 3.6886285558403797`*^9}, {
  3.6886299601696663`*^9, 3.6886299684952188`*^9}}],

Cell[CellGroupData[{

Cell["Sorting", "Subsection",
 CellChangeTimes->{{3.688628562059529*^9, 3.6886285689130964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628606726386*^9, 3.6886286118918285`*^9}, {
  3.688628650676688*^9, 3.688628680880825*^9}, {3.688628737783805*^9, 
  3.6886287409681163`*^9}, {3.688629565653778*^9, 3.688629569613417*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886297663209667`*^9, {3.6886302940820627`*^9, 3.6886303059509783`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for sorting we can use Sort[list,cmp] function by default cmp is Less\
\>", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296350577383`*^9}}],

Cell["for sorting Descending we have to use Greater comp function\
\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296535960965`*^9}, {
  3.6886296951497993`*^9, 3.688629700763543*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", " ", 
  RowBox[{
  "even", " ", "in", " ", "sort", " ", "data", " ", "is", " ", "note", " ", 
   "modified", " ", "of", " ", "original", " ", "we", " ", "have", " ", "to", 
   " ", "assign", " ", "back", " ", "on", " ", "return", " ", "if", " ", 
   "wanted", " ", "to", " ", "change"}]}]], "Input",
 CellChangeTimes->{{3.6886297045200453`*^9, 3.6886297404780703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.688629574368588*^9, 3.6886295784623156`*^9}, {
   3.688629665768211*^9, 3.6886296686171103`*^9}, 3.68862975595006*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886295787985425`*^9, 3.6886296689453297`*^9, {3.6886297568546553`*^9, 
   3.688629768379339*^9}, 3.6886303084866657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "changed", " ", "or", " ", "sorting"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886297513693295`*^9, 3.6886297857359114`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{{3.688630284575207*^9, 3.688630312141353*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"a", ",", "Less"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", 
    RowBox[{"Sort", "[", "a", "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886303193541617`*^9, 3.688630370383306*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303711658273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"a", ",", "Greater"}], "]"}]], "Input",
 CellChangeTimes->{{3.688630373376301*^9, 3.6886303787408805`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "91", ",", "73", ",", "72", ",", "60", ",", "58", ",", "57", ",", "53", ",",
    "27", ",", "26", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303792992487`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reversing ", "Subsection",
 CellChangeTimes->{{3.688629953082942*^9, 3.688629954596951*^9}}],

Cell["we can reverse using Reverse[list] function", "Item",
 CellChangeTimes->{{3.688629792388344*^9, 3.6886298017836075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.6886298048806725`*^9, 3.688629807681542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "46", ",", "23", ",", "7", ",", "47", ",", "26", ",", "66", ",", "38", ",", 
   "85", ",", "5", ",", "43"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298080067563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.688629820293948*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "43", ",", "5", ",", "85", ",", "38", ",", "66", ",", "26", ",", "47", ",", 
   "7", ",", "23", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298206381807`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Padding", "Subsection",
 CellChangeTimes->{{3.6886299862660637`*^9, 3.6886299993162813`*^9}}],

Cell[CellGroupData[{

Cell["padding means adding some elements to left or right", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.688630013132492*^9}}],

Cell["\<\
we can make alist of desired length by padding with some element on left or \
right\
\>", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.6886300377304125`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886300400500956`*^9, 3.688630053498059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886300539733753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
we can pad a list at left using  0 by function PadLeft[list,final_length] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.688630124490388*^9}}],

Cell["\<\
we can pad a list at left using  n by function PadLeft[list,final_length,n] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.6886301437107334`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301479605646`*^9, 3.688630159971572*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886301606600313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301622731085`*^9, 3.6886301787323527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688630173380782*^9, 3.688630179131615*^9}}]
}, Open  ]],

Cell["\<\
similarly we can use PadRight[list,final_length] and \
PadRight[list,final_length,n]\
\>", "Item",
 CellChangeTimes->{{3.688630188013539*^9, 3.6886302220395164`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying first and last value in list", "Section",
 CellChangeTimes->{{3.6887968967366643`*^9, 3.6887969130331087`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 to know first value we use First[list]  we can also use 1 index\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796945805561*^9}, {
  3.688797039826309*^9, 3.6887970439430666`*^9}}],

Cell["\<\
to know last we can use Last[list]  we can also use last index or -1\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796943373938*^9}, {
  3.6887970301077824`*^9, 3.688797037257593*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "  ", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6887969510238905`*^9, 3.6887969760462794`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.6887969766787024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796978897189*^9, 3.6887969815109344`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.688796981900195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887969835092726`*^9, 3.6887969920588045`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6887969927983007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796998780304*^9, 3.68879700081166*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970018923817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887970037146034`*^9, 3.688797008966114*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970093153515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"Length", "[", "alist", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688797010332028*^9, 3.68879702567982*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.688797026350271*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting List items by rules", "Section",
 CellChangeTimes->{{3.688797089934708*^9, 3.68879711023382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mlist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887971153608484`*^9, 3.6887971405141954`*^9}, {
  3.68879849552672*^9, 3.688798500324931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.688797141094892*^9, 3.688798500910324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 to select value using some rule we use Select[list,Predicate]  \
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.6887971821188927`*^9}}],

Cell["\<\
this will return only the value which satisfy the give predicate\
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.688797196594576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using predicates or Testing Expressions", "Subsection",
 CellChangeTimes->{{3.6887973588117514`*^9, 3.6887973629345055`*^9}, {
  3.6887974751788745`*^9, 3.6887974798740153`*^9}, {3.6887986736551127`*^9, 
  3.688798674824897*^9}}],

Cell[CellGroupData[{

Cell["\<\
there is a lot of predicate availabe in Walfram language for checking value \
\>", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982811639977`*^9}}],

Cell["all can take Expression and  returns true or false", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982874742155`*^9}, {3.6887983831631527`*^9, 3.6887983895063953`*^9}}],

Cell["most of them are ended with Q ex- EvenQ,OddQ etc", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.6887974358935432`*^9}, {
  3.6887975307824464`*^9, 3.6887975318321395`*^9}, {3.6887975811271715`*^9, 
  3.688797592496301*^9}, {3.6887977027562904`*^9, 3.6887977044664373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Types of Testing Expressions", "Subsubsection",
 CellChangeTimes->{{3.6887975993108616`*^9, 3.688797614212903*^9}, 
   3.688798601675947*^9}],

Cell[CellGroupData[{

Cell["there are many types , main are following", "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.688797644292585*^9}}],

Cell[TextData[{
 StyleBox["Number Predicates", "Code"],
 "\[LineSeparator]    \[LineSeparator]           ",
 StyleBox["With Q -", "Code"],
 "  IntegerQ[x],EvenQ[x],OddQ[x],PrimeQ[x],CoprimeQ[x1,x2,...]\[LineSeparator]\
              PossibleZeroQ[x] - if it is possible to get 0 with expression \
inside any time \[LineSeparator]          \[LineSeparator]           ",
 StyleBox["With Out Q - ", "Code"],
 " Positive,Negative,NonPositive,NonNegative          "
}], "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.6887976928256483`*^9}, {
  3.6887979558352184`*^9, 3.6887979666409845`*^9}, {3.688798177805189*^9, 
  3.6887981864169483`*^9}, {3.6887982377458916`*^9, 3.688798430971812*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6887984799386716`*^9, 3.6887984809313354`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "for", " ", "selecting", " ", "odd", " ", "numbers", " ", "from", " ", 
    "given", " ", "list", " ", "we", " ", "can", " ", "use", " ", "OddQ", " ",
     "predicate"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Select", "[", 
   RowBox[{"mlist", ",", "OddQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887972071381645`*^9, 3.688797243607638*^9}, 
   3.688798485353916*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887984860173593`*^9, 3.688798503463029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"mlist", ",", "PrimeQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887985077985897`*^9, 3.688798516685527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.6887985170547743`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating our own Predicate ", "Subsection",
 CellChangeTimes->{{3.688798692955434*^9, 3.6887987001242313`*^9}}],

Cell[CellGroupData[{

Cell["we can also use our own predicate to test the values", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798799107692*^9}}],

Cell["\<\
In this case the value of list will be supplied to Hash \[OpenCurlyQuote]#\
\[CloseCurlyQuote] sign and then we can test our condition \
\>", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.6887988456639004`*^9}}],

Cell["And \[OpenCurlyQuote]&\[CloseCurlyQuote] sign is used to tell the end \
of condition", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798856724831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688798723782589*^9, 3.6887987332354336`*^9}, 
   3.696447719816329*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6887987335756626`*^9, 3.696447721986768*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"alist", ",", 
   RowBox[{
    RowBox[{"#", ">", "4"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688798736647715*^9, 3.688798760659309*^9}, {
   3.688798793932227*^9, 3.688798794303479*^9}, 3.688798859355589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688798748565688*^9, 3.6887987615078754`*^9}, 
   3.688798795258115*^9, 3.688798865143461*^9, 3.696447723594841*^9}]
}, Open  ]],

Cell["\<\
if we want to get n elements from the output we can give another attributes\
\[LineSeparator]it will return only first n which has passed the test\
\>", "Item",
 CellChangeTimes->{{3.688798967662702*^9, 3.6887990078056116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"alist", ",", 
    RowBox[{
     RowBox[{"#", ">", "4"}], "&"}], ",", "2"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "2", " ", "will", " ", "come", " ", "from", " ", "all", " ", 
    "result"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6887990103853416`*^9, 3.6887990332431636`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887990195354586`*^9, 3.688799033566383*^9}, 
   3.6964477256562204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"alist", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "0"}], " ", "&&", " ", 
      RowBox[{"#", "<", "8"}]}], "&"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"using", " ", "multiple", " ", "conditions"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6964477152760267`*^9, 3.69644779888741*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6964477277606225`*^9, 3.6964478003874016`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting Duplicate values from a list", "Section",
 CellChangeTimes->{{3.688799090793316*^9, 3.688799096777318*^9}}],

Cell[CellGroupData[{

Cell["\<\
for deleting duplicate value we can use DeleteDuplicates[list]\
\>", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.688799146310629*^9}}],

Cell["order will be maintained as the original", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.6887991552436047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
    "6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6887991330221753`*^9, 3.688799142626604*^9}, {
  3.6887995232811117`*^9, 3.688799524018608*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.688799169157509*^9, 3.688799524780114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799157831333*^9, 3.688799163411065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "3", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887991637853174`*^9, 3.68879917146605*^9}, 
   3.6887995271426945`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Multiple Lists ", "Section",
 CellChangeTimes->{{3.6887991830768185`*^9, 3.6887991894761267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"min", ",", "max"}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.688799192952454*^9, 3.6887992076458125`*^9}, {
  3.6964479301640778`*^9, 3.6964479381363897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68879920799705*^9, 3.688799314773139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list2", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"min", ",", "max", ",", "step"}], "]"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.688799209627138*^9, 3.6887992223956842`*^9}, {
  3.696447945248138*^9, 3.6964479482010937`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.688799319059003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list3", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"5", ",", "50", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887992862309823`*^9, 3.6887993311706295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", 
   "40", ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.688799302130147*^9, 3.688799332265359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Join[list1,list2,list3...]", "Subsection",
 CellChangeTimes->{{3.6887999814691887`*^9, 3.6888000042461147`*^9}}],

Cell["\<\
we can use Join[l1,l2,l3.....] function which can join n lists and return \
joined\
\>", "Item",
 CellChangeTimes->{{3.6887992261451902`*^9, 3.688799273023145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"list1", ",", "list2", ",", "list3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887992754587765`*^9, 3.6887992842396483`*^9}, {
  3.688799337508868*^9, 3.6887993403627768`*^9}, {3.6887993866253815`*^9, 
  3.6887994026716385`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50",
    ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "5", ",", 
   "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", 
   ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688799340745033*^9, {3.6887993891090393`*^9, 3.6887994032910533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 if we do not want duplicate to come we can use Union[l1,l2,....]\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887994950269055`*^9}}],

Cell["\<\
Note- Union gives Sorted output (DeleteDuplicates[] do not) and remove \
duplicates\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887995486255984`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.688799630629982*^9, 3.6887996391506834`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887996351570096`*^9, 3.6887996396019845`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688799642305794*^9, 3.6887996660513315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6887996667898273`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Union[list1,list2,list3...] and Union[list]", "Subsection",
 CellChangeTimes->{{3.6888000248186646`*^9, 3.6888000415393677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"alist", ",", "blist"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sort", " ", ",", 
    RowBox[{"join", "  ", "and", " ", "remove", " ", "duplicate"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.688799669091366*^9, 3.688799690554242*^9}, {
  3.6964485377352576`*^9, 3.6964485448360023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12", ",", "21"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6887996757528214`*^9, 3.6887996926226263`*^9}}]
}, Open  ]],

Cell["\<\
 we some times use Union on a single list to sort and remove duplicate\
\>", "Item",
 CellChangeTimes->{{3.688799694485873*^9, 3.6887997100918436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887997194681168`*^9, 3.688799719994466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997204647827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799723748977*^9, 3.6887997267465167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997270937505`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intersection[list1,list2,list3...] and Intersection[list]", "Subsection",
 CellChangeTimes->{{3.688800050478381*^9, 3.6888000602052693`*^9}}],

Cell["\<\
Intersection[l1,l2,....] is same  as Union[] it give intersection and sorted \
\>", "Item",
 CellChangeTimes->{{3.6887997606677294`*^9, 3.688799805564452*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887998091860056`*^9, 3.6887998096993494`*^9}, 
   3.6888000705408387`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998103597946`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6887998110032234`*^9, 3.688799811644651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688799811970868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688799813554931*^9, 3.688799820265419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998206286592`*^9}]
}, Open  ]],

Cell["\<\
on one list it will only sort and remove duplicate same as Union[]\
\>", "Item",
 CellChangeTimes->{{3.688799838625217*^9, 3.688799851298224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Intersection", "[", "alist", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.688799822656019*^9, 3.6887998335388145`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.688799830934072*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Riffle", "Subsection",
 CellChangeTimes->{{3.688800074262714*^9, 3.688800076885058*^9}}],

Cell["we can use Riffle[]  to interperse data of two list", "Item",
 CellChangeTimes->{{3.688800139322042*^9, 3.688800157247795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688800167680044*^9, 3.6888001866337514`*^9}, {
  3.6888002345623255`*^9, 3.6888002391094427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800168883234*^9, 3.6888001868837647`*^9}, 
   3.6888002500660744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6888001886807337`*^9, 3.6888002032729626`*^9}, {
  3.688800244581406*^9, 3.6888002468784037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.688800203772986*^9, 3.688800247831582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688800205835593*^9, 3.6888002147742996`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6888002151649437`*^9, 3.6888002518786736`*^9}]
}, Open  ]],

Cell["\<\
if one ends before other cyclically value will be take for that list\
\>", "Item",
 CellChangeTimes->{{3.68880021855575*^9, 3.6888002274242587`*^9}, {
  3.6888002682959814`*^9, 3.6888002766870584`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6888002805622644`*^9, 3.6888003290566597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "x", ",", "d", ",", "y", 
   ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800293127588*^9, 3.688800329728573*^9}}]
}, Open  ]],

Cell["for more see refrence", "Item",
 CellChangeTimes->{{3.688800336573354*^9, 3.6888003742801695`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices and Vectors in Mathematica", "Chapter",
 CellChangeTimes->{{3.689921686311863*^9, 3.689921693403593*^9}}],

Cell[CellGroupData[{

Cell["Creating Matrices and Vectors", "Section",
 CellChangeTimes->{{3.689922246096796*^9, 3.6899222530994687`*^9}}],

Cell[CellGroupData[{

Cell["\<\
vectors are simply list, vectors could be either row or column vector\
\>", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921745391843*^9}, {
  3.6899222257452207`*^9, 3.6899222376561646`*^9}}],

Cell["Matrices can be seen as 2D vector or list", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921765330381*^9}, {
  3.6899224637495546`*^9, 3.689922466693447*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vect1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217691234736`*^9, 3.68992177991567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.689921780689186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217823502927`*^9, 3.6899217978686485`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921791414345*^9, 3.6899218048383017`*^9}, 
   3.6899220153441505`*^9}]
}, Open  ]],

Cell["\<\
we can convert our matrix to symbolic matrix for using MatrixForm[mat] \
function\
\>", "Item",
 CellChangeTimes->{{3.689921947329299*^9, 3.6899219675838146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"MatrixForm", "[", "Mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899219703356533`*^9, 3.6899220123161297`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689921977952733*^9, 3.689922019708062*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "We", " ", "never", " ", "able", " ", "to", " ", "apply", " ", "any", " ", 
   "operation", " ", "on", " ", "matrix", " ", "form", " ", "it", " ", "is", 
   " ", "just", " ", "for", " ", "demonstration", " ", "in", " ", "visual", 
   " ", 
   RowBox[{"manner", "."}]}]}]], "Input",
 CellChangeTimes->{{3.689924972503436*^9, 3.689925005386381*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Mat1"], "Input",
 CellChangeTimes->{{3.689921993257943*^9, 3.689921995596509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921995961753*^9, 3.68992202195356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"Mat1", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "matrix", " ", "addition", " ", "operation", " ", "can", " ", "be", " ", 
     "applied"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922000671894*^9, 3.689922004100187*^9}, {
  3.6899221901103415`*^9, 3.6899222035955195`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6899220045364685`*^9, 3.689922024959567*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"Mat2", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"addition", " ", 
     RowBox[{"can", "'"}], "t", " ", "be", " ", "applied", " ", "as", " ", 
     "it", " ", "is", " ", "symbolic"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6899220563264503`*^9, 3.689922061799097*^9}, {
  3.6899221682446156`*^9, 3.689922182731411*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "2", "3"},
      {"4", "5", "6"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.68992206227542*^9, 3.689922183107669*^9}]
}, Open  ]],

Cell["\<\
 here we have used a different variable to get into matrix form because once \
a variable is converted into matrix form it just remain for symbolic \
representation and matrix operations such addition,subtraction etc can\
\[CloseCurlyQuote]t be applied to it;\
\>", "Item",
 CellChangeTimes->{{3.6899220641486683`*^9, 3.689922164902385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on Matrices", "Section",
 CellChangeTimes->{{3.689922258727228*^9, 3.6899222643950176`*^9}}],

Cell[CellGroupData[{

Cell["addition and subtraction", "Subsection",
 CellChangeTimes->{{3.689922726459812*^9, 3.6899227313050413`*^9}}],

Cell[CellGroupData[{

Cell["\<\
addition  and subtraction are  simply operations in which  correponding \
elements of matrices are added/subtracted.\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.68992239621894*^9}}],

Cell["\<\
adding,subtracting,diving and multipling using scalar do it for every \
elements.( as Maths in Matrices)\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899225846689787`*^9}, {3.696449583693764*^9, 3.6964495890233088`*^9}}],

Cell["matrices of same dimensions can be added/subtracted only", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899226054810133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68992234403312*^9, 3.689922357172894*^9}, {
  3.6899226115981026`*^9, 3.689922611711172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922357442068*^9, 3.6899226200419335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899223579434023`*^9, 3.6899223721758995`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922373618859*^9, 3.6899226229418693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", "=", 
  RowBox[{"mat1", "+", "mat2"}]}]], "Input",
 CellChangeTimes->{{3.689922375822329*^9, 3.689922385852023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899226776851325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat4", "=", 
   RowBox[{"mat1", "-", "mat2"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689922679740505*^9, 3.6899226967098255`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922697275203*^9}]
}, Open  ]],

Cell["\<\
to get dimension of a  matrix or vector we can use Dimensions[mat] method\
\>", "Item",
 CellChangeTimes->{{3.6899224857701917`*^9, 3.6899225118203793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat3", "]"}]], "Input",
 CellChangeTimes->{{3.6899225505702314`*^9, 3.689922554388779*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6899225548100576`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication", "Subsection",
 CellChangeTimes->{{3.689922747235174*^9, 3.6899227505093637`*^9}, 
   3.689922989022394*^9}],

Cell[CellGroupData[{

Cell["\<\
for matrix multiplication no. of columns in first should be equal to no. of \
rows in second\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.6899227825803547`*^9}}],

Cell["\<\
matrix multiplication in not commutative but it is associative.\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899229967815704`*^9}}],

Cell["\<\
matrix multiplication is denoted by dot (. ), while element wise \
multiplication is shown by astric(*) or space.(as before) \
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899230143773127`*^9}, {3.6964497600331087`*^9, 
  3.6964497744698734`*^9}, {3.6964500443979874`*^9, 3.696450044827281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "by", " ", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899230167829247`*^9, 3.689923096450742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230186461697`*^9, 3.6899230617265463`*^9, 
  3.689923097430396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"3", " ", "by", " ", "2"}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.689923023535987*^9, 3.6899230239882917`*^9}, {
  3.6899230697579393`*^9, 3.689923107276969*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230248308506`*^9, 3.689923080212909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat5", "=", 
  RowBox[{"mat1", " ", ".", " ", "mat2", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"we", " ", "get", " ", "2", "*", " ", "2"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922805849882*^9, 3.689922827000002*^9}, {
  3.689922873898287*^9, 3.689922874634778*^9}, {3.6899231234637656`*^9, 
  3.689923171935214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"22", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689923125124873*^9, 3.6899231380885243`*^9}, {
  3.689923170214066*^9, 3.6899231730169387`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Matrices", "Section",
 CellChangeTimes->{{3.689924381318465*^9, 3.689924385737419*^9}}],

Cell[CellGroupData[{

Cell["\<\
for generating a matrix having all elements as some constant value we can \
\[LineSeparator]use ConstantArray [x,{n,m,...}] \[LineSeparator]x- constant \
value\[LineSeparator]n,m,.... - dimensions of the matrix\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924656127595*^9}}],

Cell["\<\
we can use this formula for creating just a list having some constant value\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924683537887*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689924583241144*^9, 3.6899246054179463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689924595635416*^9, 3.6899246060713797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689924612193799*^9, 3.689924615524027*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899246162735257`*^9}]
}, Open  ]],

Cell["\<\
for creating identity matix we use IdentityMatrix[n] , for n by n matrix\
\>", "Item",
 CellChangeTimes->{{3.689924701704008*^9, 3.6899247301469836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imat", "=", 
  RowBox[{"IdentityMatrix", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899247342727375`*^9, 3.689924739590294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689924739927513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "imat", "]"}]], "Input",
 CellChangeTimes->{{3.689924742751397*^9, 3.6899247455362597`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0"},
     {"0", "0", "1", "0", "0"},
     {"0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689924745851463*^9}]
}, Open  ]],

Cell["\<\
 for generating Random Value matrix we can use RandomInteger[] or RandomReal\
\>", "Item",
 CellChangeTimes->{{3.6964498635265975`*^9, 3.696449901506409*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6964499043132734`*^9, 3.6964499203356724`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "60", "24"},
     {"19", "84", "44"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.696449921080168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"100", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6964499440335493`*^9, 3.696449944655957*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"44.99405366025982`", "0.4824457552847292`", "68.21608030220293`"},
     {"8.537735813337477`", "64.70874011878942`", "14.302912427252082`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.696449945328411*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposing a Matrix", "Section",
 CellChangeTimes->{{3.6899248006008325`*^9, 3.6899248071602073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899248093766885`*^9, 3.689924832107856*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899248341592236`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"MatrixForm", "[", "mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.689924942502418*^9, 3.6899249499513845`*^9}, {
  3.6964499324727697`*^9, 3.696449932805998*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"2", "3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899249503356423`*^9}]
}, Open  ]],

Cell["for transposing we use Transpose[mat] function", "Item",
 CellChangeTimes->{{3.689924891090212*^9, 3.689924909258051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "mat1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899249112153616`*^9, 3.6899249538840084`*^9}, {
  3.6899250149627705`*^9, 3.6899250221935954`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"2", "3"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689924935730551*^9, 3.6899249545404453`*^9}, 
   3.689925022603863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["for find inverse we use Inverse[mat] method", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.6899250670156155`*^9}}],

Cell["we need to have square matrix for this", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.689925075504281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689925051618114*^9, 3.6899251064642887`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925115289177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invmat3", "=", 
  RowBox[{"Inverse", "[", "mat3", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899251199823093`*^9, 3.689925135041356*^9}, {
  3.689925184000023*^9, 3.6899251972841005`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899251975823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", " ", ".", " ", "invmat3", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", " ", "*", " ", "inv", 
     RowBox[{"(", "a", ")"}]}], " ", "=", " ", "identity"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925202249417*^9, 3.689925228592148*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899252087499795`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elementwise Calculations in Matrices", "Section",
 CellChangeTimes->{{3.6899253066732483`*^9, 3.689925316026492*^9}}],

Cell[CellGroupData[{

Cell["\<\
in elementwise calculations corresponding elements of each matrix are picked \
up and perform operation with each other\
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.68992544677*^9}}],

Cell["\<\
matrix multiplication is denoted by dot (. ), while element wise \
multiplication is shown by astric(*) or space.(as before) \
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.6899254836040087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925317478456*^9, 3.689925325762538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925327189702*^9, 3.696450080784862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899253276670246`*^9, 3.689925346035282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899253464755735`*^9, 3.6964500824179497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"20", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.696450072064772*^9, 3.696450142804637*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9344890372719254, 0.4850769010961978, 
   0.0032616075392849215`}, {0.9016563408853635, 0.7399367295429181, 
   0.36311400567830276`}}, {{0.9284108363313454, 0.8479273436453746, 
   0.6118307128388514}, {1., 0.42, 0.}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{1.5, 
       FormBox["1", TraditionalForm]}, {0.5, 
       FormBox["2", TraditionalForm]}}, {{1.5, 
       FormBox["1", TraditionalForm]}, {0.5, 
       FormBox["2", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{212.72727272727275`, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.696450127327217*^9, 3.696450143466076*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"mat1", "  ", "mat2"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "not", " ", "matrix", " ", "multiplication", " ", 
    "it", " ", "is", " ", "just", " ", "corresponding", " ", "element", " ", 
    "multiplication"}], " ", "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "or", " ", "we", " ", "can", " ", "use", " ", "*", " ", "in", " ", "place",
     " ", 
    RowBox[{"of", " ", "'"}], 
    RowBox[{"space", "'"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899253478635006`*^9, 3.689925375271292*^9}, 
   3.689925487797814*^9, {3.696450163218321*^9, 3.6964502210253625`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "16", "27"},
     {"40", "55", "72"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899253519732447`*^9, 3.6899253755164547`*^9}, 
   3.6899254882060776`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "+", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925383004453*^9, 3.689925387076175*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"8", "10", "12"},
     {"14", "16", "18"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253874324055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "/", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899253887873096`*^9, 3.6899253977973237`*^9}, {
  3.689925500952712*^9, 3.689925501184868*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "7"], 
      FractionBox["1", "4"], 
      FractionBox["1", "3"]},
     {
      FractionBox["2", "5"], 
      FractionBox["5", "11"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253983186707`*^9, 3.6899255018663244`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Referring to matrix rows and columns", "Section",
 CellChangeTimes->{{3.6899255342497835`*^9, 3.6899255457264404`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925550788823*^9, 3.6899255633311872`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899255636724167`*^9, 3.6964513943731866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.6899255684846296`*^9, 3.689925572182093*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "14", "21"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689925572588367*^9}]
}, Open  ]],

Cell["\<\
for referring value in 2D array(matrix ) we need row and column so we will \
provide two argument in mat[ [ i , j ] ] insted of 1 in array a [ [ i ] ]\
\>", "Item",
 CellChangeTimes->{{3.6899256020620365`*^9, 3.6899256732767496`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "remember", " ", "here", " ", "we", " ", "have", " ", "1", " ", "based", 
    " ", "indexing"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899256774215155`*^9, 3.6899257007430763`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.689925682743065*^9, 3.696451398420882*^9}]
}, Open  ]],

Cell["for getting while row or column we use \[OpenCurlyQuote]All\
\[CloseCurlyQuote] keyword", "Item",
 CellChangeTimes->{{3.6899257289699106`*^9, 3.6899257457441044`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "all", " ", "columns", " ", "for", " ", "row", " ", "1"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899257625713434`*^9, 3.6899257836025944`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{3.689925769400898*^9, 3.69645140107865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925787810398*^9, 3.6899257929448223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.6899257934441576`*^9, 3.696451403106006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similary as simple list we can also provide range of indexes instead of \
\[OpenCurlyQuote]All\[CloseCurlyQuote] using  double semi colon \
\[OpenCurlyQuote];;\[CloseCurlyQuote] or Range[min,max] function\
\>", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925851969365*^9}, {
  3.6964513720833187`*^9, 3.696451385964573*^9}}],

Cell["we can also provide list of index as list ", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925865454362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", "simple", " ", "list"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925867162507*^9, 3.6899259221199665`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.689925877231223*^9, 3.689925902418028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "3"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6964514121160088`*^9, 3.696451420161371*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{3.6964514208358216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899258796728535`*^9, 3.6899259086659985`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.6899258907112155`*^9, 3.689925909144309*^9}}]
}, Open  ]],

Cell["\<\
we can also change value using the above method as we are using with lists\
\>", "Item",
 CellChangeTimes->{{3.6899259488267417`*^9, 3.689925963442492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mat", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}], "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.6899259660764446`*^9, 3.6899259725847883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689925977018749*^9, 3.6899259857715883`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"100", "100", "100"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899259778523035`*^9, 3.6899259861208215`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899260158656693`*^9, 3.6899260162759485`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899257540776787`*^9, 3.689925759173071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Converting matrix to list", "Section",
 CellChangeTimes->{{3.6899260233186436`*^9, 3.6899260281338525`*^9}}],

Cell[CellGroupData[{

Cell["we can use Flatten[mat] method to convert matrix to list", "Item",
 CellChangeTimes->{{3.6899260292776175`*^9, 3.6899260460759583`*^9}, {
  3.69645143738986*^9, 3.696451437398863*^9}}],

Cell["this method flats row major.(row one by one) ", "Item",
 CellChangeTimes->{{3.6899260292776175`*^9, 3.6899260460759583`*^9}, {
  3.69645143738986*^9, 3.6964514532537436`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899260469035187`*^9, 3.6899260564448853`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689926056672036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689926057114324*^9, 3.689926060248422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689926060560627*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899259326288195`*^9, 3.689925945916686*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions in Mathematica", "Chapter",
 CellChangeTimes->{{3.690081272199855*^9, 3.6900812796488256`*^9}}],

Cell[CellGroupData[{

Cell["Creating a Function", "Section",
 CellChangeTimes->{{3.6900812857038593`*^9, 3.6900812897005215`*^9}}],

Cell["\<\
syntax for defining a function is different from other languages here,\
\[LineSeparator]syntax is \
\>", "Item",
 CellChangeTimes->{{3.690081641152027*^9, 3.690081682985259*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", "function_name", ">", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"<", "var_name", ">", "_"}], ",", 
     RowBox[{"<", "var_name", ">", "_"}], ",", ".."}], "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"<", "expression_here", ">"}]}]], "Code",
 CellChangeTimes->{{3.690081695061311*^9, 3.6900817487531056`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell["\<\
underscore( _ ) is used after each variable name to show it is a argument \
variable.\
\>", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081806385604*^9}}],

Cell["example for making a function for mulitplying a number by 2", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081819981668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timestwo", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"x", "*", "2"}]}], ";"}], " ", 
  RowBox[{"(*", "definition", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timestwo", "[", "10", "]"}], " ", 
  RowBox[{"(*", "calling", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.6900818285732403`*^9, 3.690081843947489*^9}, {
   3.690082679507364*^9, 3.6900827469324646`*^9}, 3.6900827911959753`*^9, {
   3.6900828524780345`*^9, 3.690082875152149*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082856829937*^9, 3.6902169258515043`*^9, 
  3.6902272928054743`*^9, 3.696446107860654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 it is a good practice to not use Camel notation for user defined functions \
to that we never get conflict with already defined functions\
\>", "Item",
 CellChangeTimes->{{3.690083145057044*^9, 3.6900831764479713`*^9}}],

Cell["\<\
pass by value mechanism is followed in mathematica and so a variable passed \
will not change its value until we take it in return\
\>", "Item",
 CellChangeTimes->{{3.690082947009632*^9, 3.690082989553155*^9}}],

Cell["\<\
now if we pass some variable then its value value will not be changed until \
it is taken back reassigned.\
\>", "Item",
 CellChangeTimes->{{3.6900828901451483`*^9, 3.6900829420793505`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "10"}]], "Input",
 CellChangeTimes->{{3.6900829035921106`*^9, 3.6900829095640917`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082909984372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timestwo", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.690082911680503*^9, 3.6900829147085238`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082915237874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"remain", " ", "same", " ", "as", " ", "before"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.690082916241542*^9, {3.6900829999190736`*^9, 3.6900830075651636`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082916545745*^9, 3.690083008023468*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"timestwo", "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "getting", " ", "changed", " ", "val"}]}]}]], "Input",
 CellChangeTimes->{{3.6900828268311977`*^9, 3.6900828447849092`*^9}, {
  3.6900830210061235`*^9, 3.6900830427496214`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690083024492447*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.6900830254440813`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6900830257152634`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"let", " ", "us", " ", "make", " ", "a", " ", "function", " ", "for",
   " ", "power"}]], "Item", "Input",
 CellChangeTimes->{{3.690082846542076*^9, 3.6900828465460777`*^9}, {
  3.6900831161682215`*^9, 3.6900831265527096`*^9}, {3.690083231210044*^9, 
  3.6900832375902987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{"a", "^", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.690083239217383*^9, 3.6900832713424063`*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{{3.6900832430319257`*^9, 3.690083272024861*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clearing/Deleting a function", "Section",
 CellChangeTimes->{{3.690083304763583*^9, 3.69008331309914*^9}}],

Cell["\<\
we can delete a function from its existence using Clear[fn_name] method same \
as variables.\
\>", "Item",
 CellChangeTimes->{{3.690083314846305*^9, 3.690083336951041*^9}, {
  3.6900841931130247`*^9, 3.690084197529971*^9}, {3.6900863718850145`*^9, 
  3.690086374072483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "power", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "removing", " ", "power", " ", "function", " ", "from", " ", "memory"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083356340968*^9, 3.69008339207022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"power", "[", 
   RowBox[{"2", ",", "5"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"now", " ", 
    RowBox[{"power", "[", "]"}], " ", "is", " ", "not", " ", "availabe"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083360855977*^9, 3.690083379585372*^9}}],

Cell[BoxData[
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.6900833650547776`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900845061642003`*^9, 3.690084512661532*^9}}],

Cell[CellGroupData[{

Cell["Barchart ", "Section",
 CellChangeTimes->{{3.6900858863317347`*^9, 3.69008588814194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"{", 
    RowBox[{"4500", ",", "3000", ",", "2150", ",", "5879"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6900858913791018`*^9, 3.690085910487838*^9}, 
   3.690085995270364*^9}],

Cell["\<\
for making barchart from a data we have to use Barchart[list] keyword\
\>", "Item",
 CellChangeTimes->{{3.6900859113874383`*^9, 3.6900859319991827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900859848334045`*^9, 3.690086032086138*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 
            4500.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.949181437280785`, 
           115.23823737572286`}, {-57.36468163998896, 108.25674931298138`}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 3000.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.43918674581329`, 
           203.72824268425535`}, {-2.3408713223321485`, 108.2567493129814}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 2150.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{210.9291920543458, 292.21824799278795`}, {
           28.839287857673355`, 108.25674931298141`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 5879.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{299.4191973628783, 
           380.70825330132044`}, {-107.94990459202141`, 108.2567493129814}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690086004224331*^9, 3.6900860327035465`*^9}}]
}, Open  ]],

Cell["BarChart3D[list] forms a 3D chart which we can roll ", "Item",
 CellChangeTimes->{{3.690086053959715*^9, 3.690086069780262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart3D", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900860715774755`*^9, 3.6900860777005415`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{
     {EdgeForm[GrayLevel[0.85]], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{0.985, 0.98, 0.02}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{1, 0, 0}], Scaled[{0, 0, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.985, 0.02, 0.02}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0, 0, 0}], 
        Scaled[{0, 0.99999, 0}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0, 0}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}, 
     {Opacity[0], EdgeForm[None], 
      CuboidBox[{{-0.21440000000000003`, -0.25, 0}, {4.502400000000001, 1.25, 
        0.024}}]}, 
     {EdgeForm[None], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{0.985, 0.98, 0.98}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.98}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{1, 1, 1}], Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0, 0.99999, 0}], 
        Scaled[{0, 1, 1}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0.99999, 0}], Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], 
        Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], 
    {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
     0.1]}], 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{0., 0., 0.}, {0., 1., 0.}, {0., 1., 
              4500.}, {0., 0., 4500.}, {1., 0., 0.}, {1., 1., 0.}, {1., 1., 
              4500.}, {1., 0., 4500.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{55.76025770238459, 
           153.3874098627449}, {-84.22435011761996, 134.718666786221}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{1.096, 0., 0.}, {1.096, 1., 0.}, {1.096, 
              1., 3000.}, {1.096, 0., 3000.}, {2.096, 0., 0.}, {2.096, 1., 
              0.}, {2.096, 1., 3000.}, {2.096, 0., 3000.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{159.74946853078768`, 
           256.82982663005475`}, {-14.270811083244894`, 134.95008801503448`}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{2.192, 0., 0.}, {2.192, 1., 0.}, {2.192, 
              1., 2150.}, {2.192, 0., 2150.}, {3.192, 0., 0.}, {3.192, 1., 
              0.}, {3.192, 1., 2150.}, {3.192, 0., 2150.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{262.2948089247172, 360.75502962350953`}, {
           25.58125656917963, 135.18128849842384`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{3.2880000000000003`, 0., 0.}, {
              3.2880000000000003`, 1., 0.}, {3.2880000000000003`, 1., 
              5879.}, {3.2880000000000003`, 0., 5879.}, {4.288, 0., 0.}, {
              4.288, 1., 0.}, {4.288, 1., 5879.}, {4.288, 0., 5879.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{363.9880089844182, 
           464.5940040191879}, {-146.9191855038198, 135.41226855208163`}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {"Graphics3DLabel"}], "Tooltip"]& ]}}}, {}, {}},
  Axes->{True, True, True},
  AxesEdge->{{-1, -1}, {1, -1}, {-1, 1}},
  AxesLabel->{None, None, None},
  BoxRatios->
   NCache[{1, 0.23320895522388058`, GoldenRatio^(-1)}, {
    1, 0.23320895522388058`, 0.6180339887498948}],
  Boxed->False,
  FaceGrids->{{{0, 1, 0}, {None, Automatic}}, {{0, 0, -1}, {
     None, None}}, {{-1, 0, 0}, {None, None}}},
  FaceGridsStyle->Automatic,
  ImageSize->{454.6242052716844, 280.145298395441},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.048, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.144, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.24, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, {{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, Automatic},
  ViewPoint->{-0.23181090622510178`, -10.302632278581639`, \
-1.3423977935331797`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.690086078593136*^9, 3.6900861431009617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
if we wanted to graph 2 or  series on a graph then we  can use a 2D list, \
where first row represents first value in all series and so on. \
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.690086313913745*^9}, {3.690086358493465*^9, 
  3.690086366610509*^9}}],

Cell["\<\
each series is of a different color, so in following example we have 3 series \
and 2 values for (similarly for Bar3D)\
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.6900863607729897`*^9}, {3.690086416678421*^9, 
  3.690086422754469*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "200", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "500", ",", "600"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"here", " ", "list"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"first_val", "_array"}], ",", 
      RowBox[{"second_val", "_array"}], ",", "..."}], "}"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.69008619384379*^9, 3.6900862169612093`*^9}, {
  3.6964520732782574`*^9, 3.696452101316948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900862191296515`*^9, 3.690086226074278*^9}, {
  3.6900863992514524`*^9, 3.690086427189429*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5141499085923217, 0.}]}, {{}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.6343692870201096, 0.}, {1.5484460694698354`, 
               100.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{28.062167808299794`, 82.11861403928971}, {
              72.70502430261682, 109.78430159583573`}}],
            StatusArea[#, 100]& ,
            TagBoxNote->"100"],
           StyleBox["100", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[100, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.6343692870201096`, 0.}, {2.5484460694698354`, 
               200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.59821998500274, 140.65466621599262`}, {
              36.175747009397895`, 109.78430159583573`}}],
            StatusArea[#, 200]& ,
            TagBoxNote->"200"],
           StyleBox["200", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[200, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.6343692870201094`, 0.}, {3.5484460694698354`, 
               300.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{145.13427216170567`, 
              199.1907183926956}, {-0.3535302838210157, 109.78430159583573`}}],
            StatusArea[#, 300]& ,
            TagBoxNote->"300"],
           StyleBox["300", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[300, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3.7312614259597807`, 0.}, {4.645338208409506, 
               400.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{209.34200763889356`, 
              263.3984538698835}, {-36.882807577039955`, 
              109.78430159583573`}}],
            StatusArea[#, 400]& ,
            TagBoxNote->"400"],
           StyleBox["400", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[400, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4.73126142595978, 0.}, {5.645338208409506, 500.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{267.87805981559654`, 
              321.9345060465865}, {-73.41208487025887, 109.78430159583573`}}],
            StatusArea[#, 500]& ,
            TagBoxNote->"500"],
           StyleBox["500", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[500, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5.73126142595978, 0.}, {6.645338208409506, 600.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{326.41411199229947`, 
              380.47055822328946`}, {-109.94136216347778`, 
              109.78430159583573`}}],
            StatusArea[#, 600]& ,
            TagBoxNote->"600"],
           StyleBox["600", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[600, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.5141499085923217, 0.}, {6.76796197440585, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.6343692870201096, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.6343692870201096, 0.}]}], 
        LineBox[{{6.645338208409506, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {6.645338208409506, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{3.5484460694698354`, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {3.5484460694698354`, 
             0.}]}], LineBox[{{3.731261425959781, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {3.731261425959781, 
             0.}]}]}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5141499085923217, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6900862265335855`*^9, {3.6900864054899597`*^9, 3.6900864278098373`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histograms", "Section",
 CellChangeTimes->{{3.6900870427714715`*^9, 3.6900870462037663`*^9}}],

Cell[CellGroupData[{

Cell["\<\
histograms tell us the frequency of data, x-axis is value and y-axis is \
frequency.\
\>", "Item",
 CellChangeTimes->{{3.69008718163198*^9, 3.690087229576903*^9}, {
  3.696452174078201*^9, 3.6964521740892076`*^9}}],

Cell["\<\
while Barchart maps exactly value, Historgrams plots frequency of data.\
\>", "Item",
 CellChangeTimes->{{3.69008718163198*^9, 3.690087229576903*^9}, {
  3.696452174078201*^9, 3.6964521954124236`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
    "14"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900870495509996`*^9, 3.6900870672009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
   "14"}], "}"}]], "Output",
 CellChangeTimes->{{3.6900870516023607`*^9, 3.6900870675201044`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087080798957*^9, 3.6900870845373325`*^9}, {
  3.690087131296259*^9, 3.690087154379843*^9}, {3.6900891971738567`*^9, 
  3.690089218891157*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {10., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{16.425800640512403`, 
          140.32247798238592`}, {-60.42604994827488, 106.28684442722334`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {20., 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{139.7724779823859, 
          263.66915532425946`}, {-115.8136814067743, 106.28684442722334`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {30., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{263.1191553242594, 387.01583266613295`}, {
          50.34921296872393, 106.28684442722334`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.6, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 30.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.690087085279827*^9, {3.6900871328843193`*^9, 3.690087154857154*^9}}]
}, Open  ]],

Cell["\<\
one thing to that here 3 frequency if for [0..10) because 10 will be in next \
bucket.\
\>", "Item",
 CellChangeTimes->{{3.690087312662095*^9, 3.690087354632416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scatter Plot", "Section",
 CellChangeTimes->{{3.690087412656469*^9, 3.6900874198606157`*^9}}],

Cell[CellGroupData[{

Cell["this is a simple plot which just plots some point in plan", "Item",
 CellChangeTimes->{{3.6900874264580145`*^9, 3.6900874487288837`*^9}}],

Cell["ListPlot[list] and ListPlot3D[list] can be used", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
  3.690087645309656*^9, 3.6900876453156605`*^9}}],

Cell["\<\
here list contains all points in xy plane(if two values for each point)\
\[LineSeparator]if only one is given it will be considered as y value and X \
value will be taken as 1,2,3,5,.... and so on.\
\>", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
   3.690087645309656*^9, 3.6900877643058896`*^9}, 3.6900878634900546`*^9, {
   3.6900896829894514`*^9, 3.6900897454850135`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900897225746636`*^9, 3.690089787634452*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 10.}, {2., 20.}, {3., 30.}, {4., 40.}, {5., 
    50.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 0.}, {1., 10.}, {2., 
    20.}, {3., 30.}, {4., 40.}, {5., 50.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{6, 1}], 
       LineBox[{7, 2}], LineBox[{8, 3}], LineBox[{9, 4}], 
       LineBox[{10, 5}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{11, 12, 13, 14, 15}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900897369873514`*^9, 3.690089788094758*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.690087486642014*^9, 3.690087511494573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6900919158743725`*^9, 3.690091915910388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6900919164377403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087623142211*^9, 3.690087627278961*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900876276141863`*^9, 3.6900919193386755`*^9}]
}, Open  ]],

Cell["\<\
here size of points is very small so we can make them bigger using \
Properties, for this purpose we have \[OpenCurlyQuote]PointSize\
\[CloseCurlyQuote] Property and inside this we will set size using PointSize[]\
\>", "Item",
 CellChangeTimes->{{3.6900879055544696`*^9, 3.690087959813858*^9}, {
  3.6900879989653807`*^9, 3.6900880150182586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900879625987167`*^9, 3.6900879844074764`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900879850218887`*^9, 3.690091931850795*^9}]
}, Open  ]],

Cell["\<\
we can also have points in 3d space giving 3 values to each point, but for \
this we have to use ListPlot3D[list] method, if we give 2 values then x will \
be take as default(starting from 1)\
\>", "Item",
 CellChangeTimes->{{3.690087867312601*^9, 3.6900878871101265`*^9}, {
  3.6964525481750526`*^9, 3.696452572136959*^9}, {3.6964531501094503`*^9, 
  3.6964531503286047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900877716105776`*^9, 3.6900878005417457`*^9}, {
  3.6964531939276686`*^9, 3.6964531951885085`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.69008780122219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900878046254683`*^9, 3.6900878325970364`*^9}, {
  3.690088039449582*^9, 3.6900880897883415`*^9}, {3.6900919424928865`*^9, 
  3.6900919499236126`*^9}, {3.6964531630080533`*^9, 3.6964531652445436`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxdVk2IHFUQntWDIEJ2J9PdMz2d+en5WbMkQYi5iIF3WclGT2ICBoVFSERh
jaAH9WJfRDAJIZGYrAcJ0fWw6k1X8dSgF0ERRS+uYOJJBFEv4kmtrvq+174u
Emrf9+rVq/qqXk2Pnzj78OnbWq3WK/L/9hblgDPdgb4bOmvoEfRiw47rOXQ3
1EXb9GgZONatyLTjOdxfJKbXZ8Bj6BT704Z/xHd9Etq1hqbLPMyjRB43x8AH
0LQjDjsHv6NRuM84isb5EnGX5I1xMf8+NM478Oh6wHG+2A8NPshvuQIdhX6F
h483dnc2dvtu7fJU/jHeIdZ97AMXHqrVzkbqZmrAvHOnZjs993p1bC33PPyr
0nUL/89LeLikdl13Vs9NPA8KX07cj3oP67bsdLkbu+Ma18zzcEzXsftE92se
LM4IcdY8PKMbHafH1shD2723LfLrzJ1Q2Yt7I3eyWn4/cdsqcchvyfxTr+38
EHqf51n1TdSxHHqeLQ/g7Av223X4dfs8z+F9medZ9Tr6oWz0fcm+5z54GgF3
fH/LiJv9Q//ot4L5Iz7hWXnbZl+xjivgje+TdWlbXX6bow6cAxHqO0Pdl2Cf
WJ2+mKLunAMpzk9Qd+DCs5b7ndzN9Q/WcYi+GqM/ERd5lnwWEIfZ5+j7Ae7h
3JlgnSFO8jFFn6V4N+wP5tOFv8S9uSnSQ7wyx776spK26buQt8y9MypYl3PP
xz/6nlLrxzvrOallu7Jo7+1l9hfnxtjOfZ3jXvZBbvY/zbx/5qP476h7Wc/d
ew9X0vF2ms9m5J6swp2Db5nDtNP9R+FX5qfl2zP9UOzj0PNnMCcc7vPzOXHq
7jnELXNVr93MwBP7d2x2h/vm/zzfG+3AS8H3wTlMzfnXD/FiEvLG8+v7PT8L
yOORqg5Rx/Ol72Nlyfgcxp4fO7dkdVzh+5zauznB/uDvT27+i722fyT1/Lyv
c6ttfo4PPM8nEYf5r3+H7L0ivnvGnk/yrvv38R1ntn46tv46knve7H2zLzin
yVti+6uc0z1bX2F/1XkdSx5//ptVfkcMffxrirM/6vgfUJz1zn38hnNe1vGf
O/TpLzfOxSEu8Zt95nln/K+pfTfExc+q2nM+13mZfRri4udGdXHOuPk7k7gL
ap+FuPh5W+1RDz9vE+DIs6j7zfyzL+v+/EvfP/u2njMvvlBJ4ztK8vvzj0o6
IS79eeCgyAecq/X7Pah4L8Sljk+pJCEu/fnulsgsCnG59+dbldTzXJXUcUvt
sxCXupt9L8QlnuFA5K0kxCWex05VEoW4xHPtDZEYc8r3YeYG6mcQ4tIn6uZU
FuIS51X1k4a4xPndt5U0+lziXNwjcpHx8Dszc3sUz0Jc7n1QpfFdKve+Wskd
3RCXez9Tgf+ynmOfK974juV3JueY/x0cuKP3V9INcbn3pap9/q5/H+n/ow8r
SUNc/GtfPdt4p+L/kDZQ4z2KH+2Trca7k35W+n/ouv8AixaUTQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{45, 1, 19}, {87, 55, 95}, {5, 3, 60}, {57, 31, 104}, {
          35, 2, 20}, {80, 50, 89}, {88, 56, 97}, {59, 42, 99}, {75, 39, 
          103}, {62, 24, 103}, {81, 49, 115}, {82, 50, 120}, {85, 54, 93}, {
          75, 40, 133}, {19, 18, 102}, {76, 44, 102}, {30, 1, 45}, {83, 51, 
          124}, {84, 53, 92}, {83, 52, 91}, {67, 33, 107}, {65, 32, 105}, {74,
           37, 125}, {60, 46, 5}, {88, 55, 133}, {70, 34, 111}, {77, 46, 
          104}, {12, 11, 91}, {77, 47, 6}, {41, 4, 56}, {79, 49, 8}, {82, 51, 
          90}, {78, 48, 7}, {11, 10, 90}, {13, 12, 92}, {10, 9, 89}, {86, 53, 
          131}, {14, 13, 94}, {15, 14, 96}, {18, 17, 101}, {84, 52, 128}, {16,
           15, 98}, {17, 16, 100}, {87, 54, 132}, {78, 47, 106}, {60, 3, 
          58}, {79, 48, 110}}], 
         Polygon3DBox[{{71, 70, 111, 112}, {41, 40, 25, 26}, {100, 99, 101, 
          17}, {69, 68, 108, 109}, {38, 37, 22, 23}, {6, 5, 46, 77}, {7, 6, 
          47, 78}, {68, 67, 107, 108}, {45, 44, 29, 30}, {9, 8, 49, 81}, {102,
           44, 45, 19}, {98, 97, 100, 16}, {76, 43, 28, 64}, {96, 95, 98, 
          15}, {94, 93, 96, 14}, {8, 7, 48, 79}, {43, 42, 27, 28}, {108, 107, 
          113, 114}, {74, 36, 21, 61}, {99, 42, 43, 101}, {126, 125, 129, 
          130}, {64, 29, 44, 76}, {125, 37, 38, 129}, {73, 72, 116, 117}, {
          119, 118, 123, 124}, {127, 126, 130, 131}, {131, 130, 85, 86}, {129,
           38, 39, 132}, {66, 65, 105, 106}, {112, 111, 118, 119}, {61, 22, 
          37, 74}, {113, 112, 119, 120}, {118, 117, 122, 123}, {123, 122, 127,
           128}, {109, 108, 114, 115}, {36, 35, 20, 21}, {86, 85, 93, 94}, {
          63, 27, 42, 59}, {122, 121, 126, 127}, {115, 114, 80, 81}, {72, 2, 
          35, 116}, {116, 35, 36, 121}, {117, 116, 121, 122}, {81, 80, 89, 
          9}}], Polygon3DBox[{{91, 52, 84, 92, 12}, {90, 51, 83, 91, 11}, {
          103, 24, 25, 40, 75}, {58, 57, 104, 46, 60}, {92, 53, 86, 94, 13}, {
          106, 105, 110, 48, 78}, {121, 36, 74, 125, 126}, {89, 50, 82, 90, 
          10}, {114, 113, 120, 50, 80}, {111, 34, 73, 117, 118}, {120, 119, 
          124, 51, 82}, {110, 109, 115, 49, 79}, {130, 129, 132, 54, 85}, {
          128, 127, 131, 53, 84}, {93, 54, 87, 95, 96}, {105, 32, 69, 109, 
          110}, {133, 40, 41, 56, 88}, {59, 4, 41, 26, 63}, {103, 39, 38, 23, 
          62}, {101, 43, 76, 102, 18}, {107, 33, 71, 112, 113}, {124, 123, 
          128, 52, 83}, {95, 55, 88, 97, 98}}], 
         Polygon3DBox[{{97, 56, 4, 59, 99, 100}, {104, 31, 66, 106, 47, 77}, {
          132, 39, 75, 133, 55, 87}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{19, 1, 30, 29, 64, 28, 27, 63, 26, 25, 24, 62, 23, 22, 61, 
       21, 20, 2, 72, 73, 34, 70, 71, 33, 67, 68, 69, 32, 65, 66, 31, 57, 58, 
       3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 102, 76, 64}], Line3DBox[{58, 60, 5}], 
      Line3DBox[{6, 77, 104, 57}], Line3DBox[{7, 78, 106, 66}], 
      Line3DBox[{8, 79, 110, 105, 65}], Line3DBox[{9, 81, 115, 109, 69}], 
      Line3DBox[{10, 89, 80, 114, 108, 68}], 
      Line3DBox[{11, 90, 82, 120, 113, 107, 67}], 
      Line3DBox[{12, 91, 83, 124, 119, 112, 71}], 
      Line3DBox[{13, 92, 84, 128, 123, 118, 111, 70}], 
      Line3DBox[{14, 94, 86, 131, 127, 122, 117, 73}], 
      Line3DBox[{15, 96, 93, 85, 130, 126, 121, 116, 72}], 
      Line3DBox[{16, 98, 95, 87, 132, 129, 125, 74, 61}], 
      Line3DBox[{17, 100, 97, 88, 133, 75, 103, 62}], 
      Line3DBox[{18, 101, 99, 59, 63}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 45, 30}], 
      Line3DBox[{20, 35, 116, 117, 118, 119, 120, 50, 89, 9}], 
      Line3DBox[{5, 46, 104, 31}], Line3DBox[{6, 47, 106, 105, 32}], 
      Line3DBox[{7, 48, 110, 109, 108, 107, 33}], 
      Line3DBox[{8, 49, 115, 114, 113, 112, 111, 34}], 
      Line3DBox[{10, 90, 51, 124, 123, 122, 121, 36, 21}], 
      Line3DBox[{11, 91, 52, 128, 127, 126, 125, 37, 22}], 
      Line3DBox[{12, 92, 53, 131, 130, 129, 38, 23}], 
      Line3DBox[{13, 94, 93, 54, 132, 39, 103, 24}], 
      Line3DBox[{14, 96, 95, 55, 133, 40, 25}], 
      Line3DBox[{15, 98, 97, 56, 41, 26}], Line3DBox[{16, 100, 99, 42, 27}], 
      Line3DBox[{17, 101, 43, 28}], Line3DBox[{18, 102, 44, 29}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{329.4958764581426, 222.02387156843807`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{4., 14.}, {5., 12.}, {4., 12.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.1283626736400767`, -0.1941217148254193, -1.2750151928540876`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6900919502168093`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List Line Plot", "Section",
 CellChangeTimes->{{3.690089543931566*^9, 3.6900895510382757`*^9}, {
  3.690091854258773*^9, 3.690091856321153*^9}}],

Cell[CellGroupData[{

Cell["\<\
ListLinePlot[list] can be used to create a line plot insted of Point, it will \
join previous point to current for form line.\
\>", "Item",
 CellChangeTimes->{{3.6900895564729*^9, 3.690089577228502*^9}, {
  3.696452664770653*^9, 3.6964526809441404`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through a list of values, assumed to correspond to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) coordinates 1, 2, \
\\!\\(\\*StyleBox[\\\"\[Ellipsis] \\\", \\\"TR\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through specific \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) positions. \\n\\!\\(\\*RowBox[{\\\
\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots several lines. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListLinePlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690089584069062*^9},
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "5", ",", "15"}], "}"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "if", " ", "one", " ", "dimension", " ", "is", " ", "given", " ", "x", " ",
     "will", " ", "be", " ", "taken", " ", "by", " ", "default", " ", 
    "starting", " ", "from", " ", "1"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690089600569929*^9, 3.690089671771979*^9}, {
  3.6900899474655695`*^9, 3.6900899759792423`*^9}, {3.6964532215023813`*^9, 
  3.6964532380774326`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 10.}, {3., 5.}, {4., 15.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690089615729777*^9, 3.6900896569222965`*^9}, {
  3.6900899514832497`*^9, 3.6900899764715705`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "50", ",", "20"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900899815431776`*^9, 3.6900900013579307`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.}, {2., 10.}, {3., 50.}, {4., 20.}, {4., 
    0.}}, {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[{{1, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4}]}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69008999222029*^9, 3.690090001986344*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "for", " ", "PairedBarChart", " ", "see", " ", "video", " ", "and", " ", 
   "refrence"}]}]], "Code",
 CellChangeTimes->{{3.69008813559347*^9, 3.690088148108325*^9}, {
  3.690088187163744*^9, 3.6900881886247187`*^9}, {3.690089242856303*^9, 
  3.6900892461695104`*^9}}],

Cell[BoxData[
 RowBox[{"NOTE", "-", 
  RowBox[{
  "and", " ", "for", " ", "PairedBarChart", " ", "refrence", " ", "see", " ", 
   "video"}]}]], "Output",
 CellChangeTimes->{3.6902169259355607`*^9, 3.6902272928254776`*^9, 
  3.6964461080500717`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Chart Options", "Section",
 CellChangeTimes->{{3.6900882390733767`*^9, 3.6900882436958876`*^9}}],

Cell[CellGroupData[{

Cell["we can set different types of properties for charts.", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088278600077*^9}}],

Cell["\<\
for using different color than default we can use ChartStyle property for all \
charts.(BarChart,Histogram)\
\>", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900901905482297`*^9}}],

Cell["for Plots(ListPlot,ListLinePlot,Plot) we can use PlotStyle ", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900902165624537`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartStyle is an option for charting functions that specifies \
styles in which chart elements should be drawn.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartStyle"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900890099687195`*^9},
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900883101145444`*^9, 3.690088319436754*^9}, {
  3.6900883746329584`*^9, 3.6900883909646354`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.690088319965105*^9, {3.690088376435151*^9, 3.690088391229806*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox["77", "4"]], "Output",
 CellChangeTimes->{3.6900891294587927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coloring ", "Subsection",
 CellChangeTimes->{{3.6900891342433877`*^9, 3.690089136501895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Yellow", ",", "Blue", ",", "Orange"}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900883211358943`*^9, 3.690088370024886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088370655301*^9, 3.6900883930009837`*^9}}]
}, Open  ]],

Cell[TextData[{
 "if Colors are given then those colors will be used and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will not provide any colors, all colors will be provided cyclicly to all \
bars.it means if colors are less than bars then cyclically colors are proided."
}], "Item",
 CellChangeTimes->{{3.6900884242813377`*^9, 3.6900885127417145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Yellow"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900888359285192`*^9, 3.690088934221509*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088864699892*^9, 3.690088871091153*^9}, 
   3.6900889346677976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"30", ",", "10"}], "}"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "one", " ", "color", " ", "can", " ", "be", " ", "used"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.69009022524023*^9, 3.690090344728485*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{15., 5.}, {20., 4.}, {30., 10.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{14.765625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{15., 30.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690090249009822*^9, 3.6900903326599226`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Filling", "Subsection",
 CellChangeTimes->{{3.6900891126525993`*^9, 3.690089119111904*^9}}],

Cell[CellGroupData[{

Cell["for ListPlot[] we have property \[OpenCurlyQuote]Filling\
\[CloseCurlyQuote] ", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.6900892852583747`*^9}}],

Cell["it doesnot have ChartStyle.", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.690089311647952*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Filling is an option for ListPlot, Plot, Plot3D, and related \
functions that specifies what filling to add under points, curves, and \
surfaces. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Filling"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690088967274605*^9},
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],

Cell["\<\
Filling could be \[OpenCurlyQuote]Axis\[CloseCurlyQuote], \
\[OpenCurlyQuote]Top\[CloseCurlyQuote], \[OpenCurlyQuote]Bottom\
\[CloseCurlyQuote], in Top axis comes from upperwards.\
\>", "Item",
 CellChangeTimes->{{3.690089802764624*^9, 3.690089879496373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900884129908123`*^9, 3.69008841726567*^9}, {
  3.690088748595083*^9, 3.6900888103664865`*^9}, {3.6900891434195056`*^9, 
  3.690089163659684*^9}, {3.690089300314392*^9, 3.6900893177182274`*^9}, {
  3.690089829451853*^9, 3.6900898427548447`*^9}, {3.690089882061079*^9, 
  3.6900898951868286`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}, {1., 0.}, {
    2., 0.}, {3., 0.}, {4., 0.}, {1., 21.}, {2., 10.}, {3., 34.}, {4., 
    12.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 1}], 
       LineBox[{6, 2}], LineBox[{7, 3}], LineBox[{8, 4}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{9, 10, 11, 12}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900884136012173`*^9, 3.6900884177129593`*^9}, {
   3.6900887572218294`*^9, 3.690088810801778*^9}, {3.6900891541413403`*^9, 
   3.6900891647023797`*^9}, 3.6900893181465073`*^9, {3.690089827650652*^9, 
   3.6900898432221537`*^9}, {3.6900898901424685`*^9, 3.6900898959013047`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Legends", "Subsection",
 CellChangeTimes->{{3.690089353989502*^9, 3.690089354991167*^9}}],

Cell[CellGroupData[{

Cell["legends can be used in all charts and plots ", "Item",
 CellChangeTimes->{{3.690089357511839*^9, 3.6900893744568577`*^9}, {
  3.6900900662308145`*^9, 3.6900900662348156`*^9}, {3.6900917819250507`*^9, 
  3.6900917819290524`*^9}}],

Cell["Lables used to tell about whole Plot or chart", "Item",
 CellChangeTimes->{{3.6900927769082212`*^9, 3.6900927796230326`*^9}, {
  3.6900928146570606`*^9, 3.690092827907892*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Legends and Labels", "Subsubsection",
 CellChangeTimes->{{3.690091795867342*^9, 3.6900917987892895`*^9}, {
  3.6900927724472566`*^9, 3.6900927745166287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLegends is an option for plot functions that specifies \
what legends to use. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900900777394857`*^9},
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLabel is an option for graphics functions that specifies \
an overall label for a plot. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLabel"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092788998281*^9},
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],

Cell["we can assign some string", "Item",
 CellChangeTimes->{{3.69009231173942*^9, 3.6900923177564335`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "40"}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Points\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900893763151035`*^9, 3.6900894911785564`*^9}, {
  3.690090118158925*^9, 3.6900901612531457`*^9}, {3.690090351661105*^9, 
  3.690090352252492*^9}, {3.690090390081068*^9, 3.690090407443009*^9}, {
  3.690091747444496*^9, 3.6900917797432003`*^9}, {3.690091824900454*^9, 
  3.69009183289279*^9}, {3.6900919820944824`*^9, 3.6900921337938595`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{100., 20.}, {110., 40.}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {99.84375, 0}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {99.84375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Points\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900917756874886`*^9, 3.690091833580241*^9, {3.690091986959444*^9, 
   3.690092048941967*^9}, {3.6900920846897435`*^9, 3.690092098164607*^9}, 
   3.6900921341871223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<Cos\>\"", ",", "\"\<Tan\>\""}], 
      "}"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"third", " ", "is", " ", "not", " ", "there"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6900893472269907`*^9, 3.690089348376758*^9}, {
  3.6900923209526224`*^9, 3.690092372843342*^9}, {3.6964541232362404`*^9, 
  3.6964541282465734`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"Cos\"", "\"Tan\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900923321790996`*^9, 3.690092353844492*^9}, 
   3.696454130970396*^9}]
}, Open  ]],

Cell["\[OpenCurlyQuote]Automatic\[CloseCurlyQuote] will assign some numbers \
to them ", "Item",
 CellChangeTimes->{{3.690092277248481*^9, 3.69009229592307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900921563238983`*^9, 3.690092268885913*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.690092261382902*^9, 3.69009226945028*^9}}]
}, Open  ]],

Cell["\<\
\[OpenCurlyQuote]Expressions\[CloseCurlyQuote] will automatically say the \
expression for that curve\
\>", "Item",
 CellChangeTimes->{{3.690092395602358*^9, 3.690092432691553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"sin", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6900923907511234`*^9}]
}, Open  ]],

Cell["for Label we can provide Strings (for more see ref)", "Item",
 CellChangeTimes->{{3.6900929481328974`*^9, 3.6900929637959323`*^9}, {
  3.690093140121693*^9, 3.69009314785631*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sin and Cos Functions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}, {
   3.6900928604860415`*^9, 3.690092892218716*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Sin and Cos Functions\"", TraditionalForm],
  PlotRange->{{1, 10}, {-0.9999999597402991, 0.9999999584722877}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900928758662972`*^9, 3.690092892540925*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6900928517022657`*^9, 3.6900928547753057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chart Labels and Legends", "Subsubsection",
 CellChangeTimes->{{3.690092568847359*^9, 3.6900925764964666`*^9}, {
  3.6900927205519514`*^9, 3.690092722312117*^9}}],

Cell[CellGroupData[{

Cell["chart legends are used for charts", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927267911*^9}}],

Cell["only String can be used here", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927367766285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartLegends is an option for charting functions that \
specifies what legends should be used for chart elements. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092590536192*^9},
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690092607096937*^9, 3.690092711071629*^9}, {
  3.6900927420561447`*^9, 3.6900927462169185`*^9}, {3.6964541723511734`*^9, 
  3.6964541783431673`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.47103574702108164`, 0.}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.6333638863428048, 0.}, {1.5499541704857929`, 
                 1.}, "RoundingRadius" -> 0]}], StatusArea[#, 1]& , 
              TagBoxNote -> "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6333638863428048`, 0.}, {2.549954170485793, 
                 2.}, "RoundingRadius" -> 0]}], StatusArea[#, 2]& , 
              TagBoxNote -> "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.633363886342805, 0.}, {3.549954170485793, 3.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.733272227314391, 0.}, {4.649862511457378, 1.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 1]& , TagBoxNote -> 
              "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.73327222731439, 0.}, {5.649862511457378, 3.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.73327222731439, 0.}, {6.649862511457378, 2.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.833180568285976, 0.}, {7.749770852428965, 5.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 5]& , TagBoxNote -> 
              "5"], 
             StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.833180568285976, 0.}, {8.749770852428965, 2.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.47103574702108164`, 0.}, {8.91534555453712, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6333638863428048, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6333638863428048, 
              0.}]}], 
           LineBox[{{8.749770852428963, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.749770852428963, 
              0.}]}], {{}, {}, {}, {
             LineBox[{{1.5499541704857926`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.5499541704857926`, 
                0.}]}], 
             LineBox[{{1.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.6333638863428046`, 
                0.}]}], 
             LineBox[{{2.549954170485793, 0.}, 
               Offset[{-7.347880794884119*^-16, -4.}, {2.549954170485793, 
                0.}]}], 
             LineBox[{{2.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.6333638863428046`, 
                0.}]}]}, {}, {}, {}, {
             LineBox[{{4.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.6498625114573775`, 
                0.}]}], 
             LineBox[{{4.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.733272227314389, 
                0.}]}], 
             LineBox[{{5.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.6498625114573775`, 
                0.}]}], 
             LineBox[{{5.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.733272227314389, 
                0.}]}]}, {}, {}, {
             LineBox[{{7.749770852428964, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.749770852428964, 
                0.}]}], 
             LineBox[{{7.833180568285975, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.833180568285975, 
                0.}]}]}, {
             LineBox[{{3.549954170485792, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.549954170485792, 
                0.}]}], 
             LineBox[{{3.73327222731439, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.73327222731439, 
                0.}]}], 
             LineBox[{{6.6498625114573775`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.6498625114573775`, 
                0.}]}], 
             LineBox[{{6.833180568285975, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.833180568285975, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            Directive[], {
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {1.0916590284142988`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {2.091659028414299, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {3.0916590284142984`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {4.191567369385885, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {5.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {6.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {7.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {8.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}]}}, "GraphicsLabel", StripOnInput -> 
           False]}, "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.47103574702108164`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {1.0916590284142988`, 
          FormBox["\"a\"", TraditionalForm], 0}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox["\"b\"", TraditionalForm], 0}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox["\"c\"", TraditionalForm], 0}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {4.191567369385885, 
          FormBox["\"a\"", TraditionalForm], 0}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox["\"b\"", TraditionalForm], 0}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox["\"c\"", TraditionalForm], 0}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {7.291475710357471, 
          FormBox["\"a\"", TraditionalForm], 0}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox["\"b\"", TraditionalForm], 0}}, {{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"A\"", "\"B\"", "\"C\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900926404770007`*^9, {3.6900926841470737`*^9, 3.6900927116560125`*^9}, 
   3.696454179943227*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Functions", "Section",
 CellChangeTimes->{{3.6900932425947537`*^9, 3.690093248202975*^9}}],

Cell[CellGroupData[{

Cell["Plot[] function can be used for this purpose", "Item",
 CellChangeTimes->{{3.690093260784915*^9, 3.6900932714900627`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates a plot of \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) as a function of \!\(\*StyleBox[\\\"x\
\\\", \\\"TI\\\"]\) from \!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots several functions \
\!\(\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\
\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\) takes the variable \
\!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) to be in the geometric region \
\!\(\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690093279411276*^9},
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "-", "x", "+", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690093775158005*^9, 3.690093807339102*^9}, {
  3.6964542050250964`*^9, 3.6964543039281282`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
5+98XUn4b/8i4v53/tvH/tP/D0RNHps=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl0mV0lnUcx+GN3pBGQnJ0p9It3Y4ugRGCsdHdLW2A0indJQpId0pKSCko
3Z3Xc/biOp//99wvf3dYRFR4ZIygoKBg4gdHNzQ4+l3IO0T/DHzXObqfF/Rm
Ctt5QBM68x2/cYPy1KUDo1jFZQpSgPzkIy95yE0ucpKD7GQjK1nITCbCKEcd
vmAkK7lERspSm/aMYAUXyUAZatGO4Sznb9LTmE5MZCP/U5qatGUYy7hAOhoR
xQR+5T9K0Z1JbOEONWjDUJZynrT04me2cZ+GRDKeDVynJLPYyzO68SObuU11
prGTR0RwgJcMYQnnSMOxoOhDz5bYuk+f05O49mF9w0/EtLfqPRoQzz6ib5lB
LHu3PuEb4tgH9RXjiGGv12uU4CjvmMkentKVQ7zmBzZxi2pMZQcPac1gFnOW
j+jBZP7gLvWZzi4e8zVjWce/FKcL3/M7N6lKKwaxiL9ITT2+Ygxr+YdiVKEl
A1nIGVIRzpeMZg1XKUplPmcACzhNSj6jI9+ymisUoRIt6M8vnCIFn1CR5vRj
Pif5kI/5lGb0ZR4nSE4ykpKExCQiIQn4gPiEEhK4b+AfCNyR2IH7Bv6BwB0p
TAWa0oe5HOc9LGaBkA==
        "]]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl1FWUUGUYBdARHFIQAQkJHZBUpLuku4ZSEYEBaYbu7u7uDqXDQLpLGqVR
urubfRcP+551Hu7T+dYfFtEyPPKDkJCQmD5BHmEOXfiBomQnClH5kFCiEZ0Y
wb/EIjYfEYe4fEw8PiE+CUjIUebSlVoUIwefcox5dONHipOTRPzDfLpTmxLk
4jwrGUwTqpCYf1lAD36iJLm5wCqG0JRwknCchfSkDqXIw0VWM5RmVCUpJ1hE
L+pSmhv8xRjakJdLrGEYzXnEdqZRjTtsZAId+IyT/EJv6vGArUyhDDdZx1he
8TdtecJOZvCWg+TjMr8FOxp5uHzJvmBHvYV8zI5gX326fMOBYF+9urzLpuAG
9InyNfuDG9A7ymfsJlSfJYNjOiSScYpf6cML9hLBQ7YxlbLcYj3jaMdTdjGT
/Fzhd0YQSQ3usZlJdCI5p1lMX+pTjttsYDztKcBV/mAkLalJCs6whH40oDwF
ucafjKIV35GSsyylPz9TgUJ8zjmWMYCGVKQwX/AfyxlIIyrxLWGkIjVfkoa0
pCM9GcjIV3xNJr4hM1nIyv+sYBCNqUwRrrOW0bTme+6zhcl05jl7mB3MaMfD
Ie/fh2zyHeBRgXU=
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{-10, 10}, {0., 110.9999914285716}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900937926118355`*^9, 3.690093808109221*^9}, {
   3.6964542065050774`*^9, 3.696454232505411*^9}, 3.696454305201969*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690093820682423*^9, 3.690093820722416*^9}}],

Cell["we can plot multiple functions givings list of expressions", "Item",
 CellChangeTimes->{{3.6900938478415923`*^9, 3.690093867034545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Tan", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6900938735305433`*^9, 3.6900939415052414`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA2PFNMQAA8D9anKMFJev4P8JQp41O
C/A/l87eiwoS+T+srwDqnBbwPwDFWZRGOfk/gG2zojkt8D+8AsVYx4j5Pynp
GBRzWvA/LyJNXBEs+j964OP25bTwP/hMVlMMhfs/ZD89UzTA8D9sdMXeA7L7
P06elq+Cy/A/ULUt8mnf+z8iXEloH+LwP4gJpNiIO/w/yteu2VgP8T+ZPxvq
Rfn8PxvPebzLafE/PUmDHYOM/j8GLtMYGnXxP0qBiPpPwf4/8IwsdWiA8T+9
efYKrfb+P8RK3y0Fl/E/xHVq9SFj/z9sxkSfPsTxP+0CKdOgIQBAvL0PgrEe
8j9JW6VCcxEBQKYcad7/KfI/vIBYfgUxAUCQe8I6TjXyP6YhZi74UAFAZDl1
8+pL8j9WyIRsBpIBQA212mQkefI/I6MpsP0YAkBerKVHl9PyPyeHFEBAPANA
c4g8Gdnf8j/qlNeGHGYDQIhk0+oa7PI/RKALdpWQA0CyHAGOngTzP+BUew5s
5wNABo1c1KU18z+SLfIYGp0EQBtp86XnQfM/U41A2UjMBEAwRYp3KU7zP0iq
sAI1/ARAWv23Gq1m8z+5he2VWF4FQK9tE2G0l/M/Gt3qE1ssBkDESaoy9qPz
P3OJbnMCYgZA2iVBBDiw8z+rRbTDkZgGQATebqe7yPM/PeUSKYEIB0BYTsrt
wvnzP1CEPaBe9AdAAC+BetFb9D/56/G70gIKQBULGEwTaPQ/7d+0vG9KCkAq
564dVXT0PxV7tud4kwpAVJ/cwNiM9D/X9Sdt/SkLQKgPOAfgvfQ/1IeE7ypq
DEC9687YIcr0Px/T+xKCvgxA0sdlqmPW9D+Rlv+NrhQNQHw306NL4/Q/RY5e
T3JyDUDVszlK
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
4pOzALbEuu48dowD/wP0RI46
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{1.5697683999510592`, 3.680882091591942}, {
        1.569780314353465, -3.6969707805590066`}}], 
       LineBox[{{4.71114644518174, 3.680882091591942}, {
        4.711159739514526, -3.6969707805590066`}}], 
       LineBox[{{7.85465839562941, 3.680882091591942}, {
        7.85467139451763, -3.6969707805590066`}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-3.6969707805590066`, 3.680882091591942}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"tan", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900939272803*^9, 3.690093944615713*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Creating Interactive and Animated  Visualizations ", "Chapter",
 CellChangeTimes->{{3.6902161860573416`*^9, 3.690216211828116*^9}, 
   3.6902165048805532`*^9}],

Cell[CellGroupData[{

Cell["Creating CDF file", "Section",
 CellChangeTimes->{{3.6902162881758585`*^9, 3.690216294963372*^9}}],

Cell[CellGroupData[{

Cell["\<\
 cdf(computable document formate ) is made  for users who do not have whole \
mathematica, they could also see their content.\
\>", "Item",
 CellChangeTimes->{{3.690216336518723*^9, 3.690216392405645*^9}}],

Cell[TextData[{
 "go to",
 StyleBox[" file>export>webembedded/standalone ", "Code"],
 "\[LineSeparator]now you can choose to export entire document or only \
selected(if you have selected). "
}], "Item",
 CellChangeTimes->{{3.6902164353566914`*^9, 3.690216491239493*^9}, {
  3.690216588831706*^9, 3.69021661860524*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulationg input values for an expression", "Section",
 CellChangeTimes->{{3.6902168649638963`*^9, 3.690216896306241*^9}}],

Cell[CellGroupData[{

Cell[" for manipulating values we use Manipulate[] function", "Item",
 CellChangeTimes->{{3.690216897916314*^9, 3.6902169140991616`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates \
a version of \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) with controls added \
to allow interactive manipulation of the value of \!\(\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows the value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to vary between \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\) and \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\) in steps \!\(\*StyleBox[\\\"du\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) takes the initial value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to be \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"init\\\", \\\
\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\
\", \\\"TI\\\"], StyleBox[\\\"lbl\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\) labels the controls for \!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) \
with \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"lbl\\\", \\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to take on discrete values \
\!\(\*RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) provides controls to manipulate \
each of the \!\(\*RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"u\\\", \
\\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"v\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) links the controls to the \
specified controllers on an external device.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902169298771815`*^9},
 CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"],

Cell[BoxData[{
 RowBox[{"Synta", " ", "-", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{"expr", ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "umin", ",", "umax"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
  "now", " ", "expression", " ", "could", " ", "be", " ", "anything", " ", 
   "plot"}], ",", "graph", ",", 
  RowBox[{"function", " ", 
   RowBox[{"etc", "."}]}]}]}], "Code",
 CellChangeTimes->{{3.69021777825837*^9, 3.6902178210432405`*^9}, {
  3.6964543536850953`*^9, 3.696454408651744*^9}},
 EmphasizeSyntaxErrors->True],

Cell["example 1 - value for sin[x] function from 1 to 10", "Item",
 CellChangeTimes->{{3.6902169719317026`*^9, 3.690216988181703*^9}, {
  3.690217028596558*^9, 3.6902170319207644`*^9}, {3.6964552990023785`*^9, 
  3.696455299528719*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690216989902845*^9, 3.6902170126317186`*^9}, {
  3.696455027577135*^9, 3.696455030408019*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 4.83, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 10}}, Typeset`size$$ = {91., {0., 10.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$2479$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$2479$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Sin[$CellContext`x$$], 
      "Specifications" :> {{$CellContext`x$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{306., {57., 64.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.690217013552331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"a", " ", "x"}]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902170539079056`*^9, 3.6902171086355453`*^9}, {
   3.690217211608612*^9, 3.690217268554761*^9}, {3.690217300345007*^9, 
   3.6902173349771194`*^9}, {3.6902173684235525`*^9, 3.690217394733965*^9}, {
   3.690217445373146*^9, 3.6902174715790925`*^9}, 3.69021761463721*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 2., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 2}}, Typeset`size$$ = {432., {124., 132.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$40742$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$40742$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x (
          1 + $CellContext`a$$ $CellContext`x)], {$CellContext`x, 0, 6}], 
      "Specifications" :> {{$CellContext`a$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {176., 183.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.690217072231812*^9, 3.6902171090067935`*^9}, {
   3.690217222491991*^9, 3.690217268941018*^9}, {3.6902174459095035`*^9, 
   3.6902174726247873`*^9}, 3.690217616053151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902176263359857`*^9, 3.6902176690747337`*^9}, 
   3.690218008759323*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`y$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`y$$], 0, 10}}, Typeset`size$$ = {432., {124., 132.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`y$62715$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`y$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`y$$, $CellContext`y$62715$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x + $CellContext`y$$], {$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`y$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {176., 183.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.690217650644956*^9, 3.690217670042385*^9}, 
   3.690218005004821*^9}]
}, Open  ]],

Cell["\<\
 here we can think of as we are manipulationg x of Sin[x] as  in Sin[x+y] , x \
needs to be given in \[LineSeparator]Plot function so we can manipulate y.\
\[LineSeparator]\
\>", "Item",
 CellChangeTimes->{{3.69021769127201*^9, 3.6902177631727047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{
      RowBox[{
       InterpretationBox["x",
        ToExpression["x"]], "^", "n"}], "+", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"here", " ", "2", " ", "is", " ", "step"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902178481485806`*^9, 3.6902178830831814`*^9}, {
  3.696455363985697*^9, 3.696455364249872*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 10, 2}}, Typeset`size$$ = {228., {6., 14.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$65797$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$65797$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Factor[ToExpression["x"]^$CellContext`n$$ + 1], 
      "Specifications" :> {{$CellContext`n$$, 1, 10, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{307., {58., 65.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6902178369000998`*^9, 3.690217889145208*^9}, 
   3.696455388055603*^9}]
}, Open  ]],

Cell[" we can  manipulate many values at a time", "Item",
 CellChangeTimes->{{3.690218029054241*^9, 3.6902180410492177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], "+", "b"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "15"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690218285541911*^9, 3.6902182859781914`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    19.427912902832027`, $CellContext`b$$ = 904., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -15, 25}, {
      Hold[$CellContext`b$$], 10, 1000}}, Typeset`size$$ = {
    432., {131., 139.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$70896$$ = 
    0, $CellContext`b$70897$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = -15, $CellContext`b$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$70896$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$70897$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^3 - $CellContext`a$$ $CellContext`x^2 + \
$CellContext`b$$, {$CellContext`x, -6, 6}], 
      "Specifications" :> {{$CellContext`a$$, -15, 25}, {$CellContext`b$$, 10,
          1000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {213., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.696455534066681*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animating Result in Mathematic", "Section",
 CellChangeTimes->{{3.6902183674004498`*^9, 3.6902183816038857`*^9}}],

Cell[CellGroupData[{

Cell[" Animate[] is used for Animating  in mathematica", "Item",
 CellChangeTimes->{{3.690218383052021*^9, 3.690218405879717*^9}, {
  3.696455560589571*^9, 3.6964555617597203`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
an animation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) in which \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) varies continuously from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary in steps \
\\!\\(\\*StyleBox[\\\"du\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
makes \\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) take on discrete values \\!\
\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \[Ellipsis]. \
\\n\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) varies all the variables \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\), \[Ellipsis]. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Animate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902184102646303`*^9},
 CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"],

Cell["\<\
Animate[] is same as Manipulate[], although Manipulate have Animation \
embedded on it(on clicking plus(+) sign)\
\>", "Item",
 CellChangeTimes->{{3.6902184216622024`*^9, 3.6902184291941533`*^9}, {
  3.6902184711641207`*^9, 3.690218515036003*^9}, {3.696455608786294*^9, 
  3.6964556089774265`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"x", "+", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902184347568493`*^9, 3.690218459795027*^9}, {
  3.690218525139715*^9, 3.690218553652849*^9}, {3.69021863519503*^9, 
  3.6902186360696144`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2.783265071870483, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 10}}, Typeset`size$$ = {432., {130., 138.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$112171$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$112171$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Cos[$CellContext`x + $CellContext`n$$], {$CellContext`x, 1, 20}], 
      "Specifications" :> {{$CellContext`n$$, 1, 10, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {176., 183.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.69021855440635*^9, {3.6902186167332125`*^9, 3.690218636913172*^9}}]
}, Open  ]],

Cell["\<\
 if we haven\[CloseCurlyQuote]t used AnimateRunning-> false then we get \
animate start running automatically , so if we wanted to run when only we \
click run button we use it.s\
\>", "Item",
 CellChangeTimes->{{3.690218559897999*^9, 3.690218609755581*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditionals", "Chapter",
 CellChangeTimes->{{3.6902194068700237`*^9, 3.6902194261707935`*^9}}],

Cell[CellGroupData[{

Cell["If statement", "Section",
 CellChangeTimes->{{3.6902194410873575`*^9, 3.6902194562941732`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 If[condition,on_true,on_false] evaluates condition and returns result \
according to condition.\
\>", "Item",
 CellChangeTimes->{{3.6902194817207465`*^9, 3.6902195220404725`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) if \\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) \
evaluates to True, and \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) if it \
evaluates to False. \\n\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"u\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) evaluates to neither True \
nor False. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/If"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902194831583166`*^9},
 CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztm01uK7kVRoUkgyzgbSCzN8kGNEsAb6C1gm6ga+gAnQCBdqGJBx54BZoX
YMDwErQBPfiNMvUWlCpVFXlJXv5IKqnK9jlwd5co/lzykvcjqeq//favX6o/
LRaLf/+1+dcvv/73H3/88et69Zfmwz/X//n9tz+3XzX//L3J0z7/DwAAYDoO
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV6GuFlU9tRERzrNt
zj26Ejfu8oXNqcUv78K1B+E69e83y0XDcrO/bbulmNav5DWYC8/rx2/fxd/6
Lfbt/evojZ8+kZqFk1g0Y1Jsm2PS51oaRaOd7PLt/FXIeAHtpn6/Rv0R38xo
Pgetz246wZj8eNrePb37qT93d6vdNZtFhuYNMpTgw8tQpM4ZzWdk6GsRypB/
SorpUX+ut2f7NkHMnWYmHdNFvoX5Xj10m+ewiEgJspjp2ZQP0gTia2lGVXll
ejMi3dH632ZTq9Lt1CuxVh2X3KZSe79IjZtvQ11kT2h5MNqRYXRMXiRrUNr1
upk1PtrN1FCr1jqd8au6gd/HWynZCaZMe5vgFBhlPmsZSted6qyup4ptdVAk
UznclPfd9tGw3QUnHZdzT0NyUZidSmSlGOzyyy2usEh0qzZ84dbkV9TWI/XK
GDwU0m0TIVO1zV1C8ar83Aq21HHR2dZkIEyPm2dDoT2a5VFjs8YMJbP+UrpZ
aHz5UKvWet2R4SsodS2/j7VScg1Fp33Jaei8fonmegEpX3fxqaVOpxMqhxtz
Exly9i3O3sWEmIJNziG6HsMiska19X7HFJl17sobPmXEVA1nlhJl1EYpPpJG
hkRrjuXlQUl71u3JikhsGJPVZv3lt5EzPh171Sb0oUv1x5u91/P7OCsl21B+
2o/ar7Di8nWXnueqbScsargxt5IhNd732w+xfOV+MxNS5OIKEr2wFt3j1NWZ
6zFxprtg2ab3YvrgXFOGdCG8WIbCavP+GluG8iJTnuPKfj+Mt1KyE2xcGTql
uTIDkKFPyc0u5RxnOyukikcUZXEFy1At4pyvldalDcrkk+d3+5yVoV7V4tfg
aj+1+y53lJKD45ovW1FvMJRRjT2r9kRkKBapZKhOVJvz18gylLXB+T7WqH8u
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
    "], {{0, 115}, {557, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{557, 115},
  PlotRange->{{0, 557}, {0, 115}}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
cF8GT1Tns2jNWTQ0NNA4sIO9287g1zFCpv01Ts67hfxwvp3kO+fZ/KlYp0su
RJQPKkhjFVJKT4LRPtYs28AhqQ3jvXz8nZ3cS6kXOzce3R+f4HFhmwz2RttS
sFq9jgclQwx1p+Ox/xsWrdWQ9626nb071PGQ3/kz1hDC/U2zhFV1hutZQwqY
LMDtgQ57Dx5DU6pzVZXP/n4DF93yBOQUce3949gEFIt+mwhQW8niDaqc0jjH
SY1tzP7+CQLa++go9OHgiZ1onhP1DU+xc/N65r5/lXyx66v97rD3g9+yW/82
nrk9NCY8QG/5AlapyceovnYRalefUNzTSbKhOls3bOWENI7LKsz+m61YhJTK
zt+VhPqmK4CzPzyDf3sXbXUvUP+RJqGDY0pCHa6PxeH0pyw8oCG4+g7PE6oY
7s3CzeQA63eJZs8eZq+BE0FlI3RHqLNJ3wJ/yVpqc2Lpv37AV5o+BN5axqpN
WzmobsrFHV/zb7M+R+NlNjmP9/PLD7bjklBGsP6HvLvrElFF9QRfWsJP52jx
uqmBV04nWLvhnOjnKLuEheqSIqAn9xYntY5ikScENhTGiU8+4Fcrr/O6cUR5
ZSZJPP36TjYs3s2Bs9LKnEZl3lKM45oZksQ8OUCO2X/yg1/MZpGLwsAd66Ik
xo5dh/agLa3YpeOsmbeG1audBSkMEK5zEY0dUtLgKKX2Ouycv5jdUjkzVT7/
h/XoCUIc7cng2uWjHDp6mnPSb/q7+eg7KjgJ7RruyuTy3E+Ez3KKiz7FYhkz
eHZoIYvE5pBp18Fd7BVL+jSrkJBrm1i07RzaegZc0lDn9NUHRFWOT8dFTdXh
e2Y3qxdt4pjVS/KbKgm/rc2+rWoclW2SeSzbeJ3A4h6J5+R7S6LYcdpLPDnx
Iy3CFSFUrenPMF6/l+cCAntKvLHcMI+le+S6dHrbKvadvU3am34Cjmijc9JP
WMSthGjsYc2CDRy74U9hTxrWc9SxepylgO56nLatwSy4WLBEA3HnV7Js+WGh
36LNk4fYs2wL96rFOASVX1m3nUf1MxTb1Unok2SO7H/KvHVP2HguC5/0GYrN
8M3j6jFvZm8PZJ++IJWrCbinKihWEE5LbDzr9kdwzjgRI60A1q9/zG8OvsYz
WwDawCAJ3gmoqEejdzVRRs/njVKxffn7FFuJ0+azGFwIltuvYhK+x3ZgYBtO
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
\
\>"]]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztm01uK7kVRoUkgyzgbSCzN8kGNEsAb6C1gm6ga+gAnQCBdqGJBx54BZoX
YMDwErQBPfiNMvUWlCpVFXlJXv5IKqnK9jlwd5co/lzykvcjqeq//favX6o/
LRaLf/+1+dcvv/73H3/88et69Zfmwz/X//n9tz+3XzX//L3J0z7/DwAAYDoO
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV6GuFlU9tRERzrNt
zj26Ejfu8oXNqcUv78K1B+E69e83y0XDcrO/bbulmNav5DWYC8/rx2/fxd/6
Lfbt/evojZ8+kZqFk1g0Y1Jsm2PS51oaRaOd7PLt/FXIeAHtpn6/Rv0R38xo
Pgetz246wZj8eNrePb37qT93d6vdNZtFhuYNMpTgw8tQpM4ZzWdk6GsRypB/
SorpUX+ut2f7NkHMnWYmHdNFvoX5Xj10m+ewiEgJspjp2ZQP0gTia2lGVXll
ejMi3dH632ZTq9Lt1CuxVh2X3KZSe79IjZtvQ11kT2h5MNqRYXRMXiRrUNr1
upk1PtrN1FCr1jqd8au6gd/HWynZCaZMe5vgFBhlPmsZSted6qyup4ptdVAk
UznclPfd9tGw3QUnHZdzT0NyUZidSmSlGOzyyy2usEh0qzZ84dbkV9TWI/XK
GDwU0m0TIVO1zV1C8ar83Aq21HHR2dZkIEyPm2dDoT2a5VFjs8YMJbP+UrpZ
aHz5UKvWet2R4SsodS2/j7VScg1Fp33Jaei8fonmegEpX3fxqaVOpxMqhxtz
Exly9i3O3sWEmIJNziG6HsMiska19X7HFJl17sobPmXEVA1nlhJl1EYpPpJG
hkRrjuXlQUl71u3JikhsGJPVZv3lt5EzPh171Sb0oUv1x5u91/P7OCsl21B+
2o/ar7Di8nWXnueqbScsargxt5IhNd732w+xfOV+MxNS5OIKEr2wFt3j1NWZ
6zFxprtg2ab3YvrgXFOGdCG8WIbCavP+GluG8iJTnuPKfj+Mt1KyE2xcGTql
uTIDkKFPyc0u5RxnOyukikcUZXEFy1At4pyvldalDcrkk+d3+5yVoV7V4tfg
aj+1+y53lJKD45ovW1FvMJRRjT2r9kRkKBapZKhOVJvz18gylLXB+T7WqH8u
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
    "], {{0, 115}, {557, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{557, 115},
  PlotRange->{{0, 557}, {0, 115}}]], "Input",
 CellChangeTimes->{3.6902197874868517`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", "0"}], ",", 
    RowBox[{"-", "x"}], ",", "x"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.690220011287163*^9, 3.690220015146724*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.690220015474864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.690220019318803*^9, 3.690220020959511*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.690220021240772*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Which Statement", "Section",
 CellChangeTimes->{{3.690220178293778*^9, 3.6902201812939243`*^9}}],

Cell[CellGroupData[{

Cell[" return the value according to first true result", "Item",
 CellChangeTimes->{{3.6902201846534634`*^9, 3.6902201911694093`*^9}, {
  3.690220230536804*^9, 3.690220237805703*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Which\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"test\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"test\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}]\\) evaluates each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"test\\\", \\\
\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in turn, returning the value \
of the \\!\\(\\*SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], StyleBox[\\\
\"i\\\", \\\"TI\\\"]]\\) corresponding to the first one that yields True. \
\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Which"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902201870129547`*^9},
 CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", "2"}], ";", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"a", "==", "1"}], ",", "x", ",", 
    RowBox[{"a", "==", "2"}], ",", "b"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", "=", "2"}], ";", " ", 
    RowBox[{
    "can", " ", "be", " ", "written", " ", "on", " ", "diffent", " ", "line", 
     " ", "as", " ", "well", " ", "it", " ", "is", " ", "just", " ", 
     "delimiter"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902202421652946`*^9, 3.690220314960527*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{
  3.690220250884468*^9, {3.6902203122230964`*^9, 3.6902203153355446`*^9}}]
}, Open  ]],

Cell["\<\
here in previous example a== 2 turns true so  b will be returned \
\>", "Item",
 CellChangeTimes->{{3.690220289953806*^9, 3.690220336840093*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looping Constructs", "Chapter",
 CellChangeTimes->{{3.6902203765360684`*^9, 3.690220379598685*^9}}],

Cell[CellGroupData[{

Cell["Do ", "Section",
 CellChangeTimes->{{3.690220388118686*^9, 3.690220388978108*^9}}],

Cell[CellGroupData[{

Cell[" ", "Item",
 CellChangeTimes->{{3.6902204135620975`*^9, 3.6902204183279715`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) successively taking on the values \
1 through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) (in steps of 1). \\n\\!\\(\\*RowBox[{\\\
\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\\) looping over different values of \
\\!\\(\\*StyleBox[\\\"j\\\", \\\"TI\\\"]\\) etc. for each \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Do"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902204152653074`*^9},
 CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"],

Cell["Example 1 - doing something  n times", "Item",
 CellChangeTimes->{{3.6902206348685045`*^9, 3.6902206478535247`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "\"\<hello\>\"", "]"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69022064914312*^9, 3.6902206610655756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}],

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}],

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Example 2 - Print the first four squares:", "Item",
 CellChangeTimes->{{3.690220466046645*^9, 3.690220481719284*^9}, {
  3.6902206328528175`*^9, 3.6902206329309464`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"n", "^", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "value", " ", "of", " ", "n", " ", "will", " ", "be", " ", "taken", " ", 
    "from", " ", "1", " ", "to", " ", "4"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902204854580708`*^9, 3.6902205004588203`*^9}, {
  3.6902205860108104`*^9, 3.6902205999836893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6902205008181973`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.6902205008181973`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.6902205008338227`*^9}],

Cell[BoxData["16"], "Print",
 CellChangeTimes->{3.6902205008338227`*^9}]
}, Open  ]]
}, Open  ]],

Cell["Example 3- n goes from - 3 to 5 in steps of 2 :", "Item",
 CellChangeTimes->{{3.690220532890829*^9, 3.690220541547505*^9}, {
  3.690220627993204*^9, 3.6902206288525877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "3"}], ",", "5", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "value", " ", "of", " ", "n", " ", "will", " ", "be", " ", "from"}], " ",
      "-", 
     RowBox[{"3", " ", "to", " ", "5", " ", "in", " ", "step"}]}], "=", "2"}],
    " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.690220607487871*^9, 3.6902206240199313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", "3"}]], "Print",
 CellChangeTimes->{3.6902205533956156`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.6902205534268627`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6902205431257067`*^9, 3.690220546223421*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["While", "Section",
 CellChangeTimes->{{3.690220682133571*^9, 3.690220682742997*^9}}],

Cell[CellGroupData[{

Cell[" while evaluates until test fails", "Item",
 CellChangeTimes->{{3.6902206862587576`*^9, 3.690220706483329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"While\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\), then \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\), \
repetitively, until \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) first \
fails to give True. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/While"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690220689810602*^9},
 CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"],

Cell[TextData[{
 "Example 1 - ",
 "Print and increment ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula"],
 " while the condition ",
 Cell[BoxData[
  RowBox[{
   StyleBox["n", "TI"], "<", "4"}]], "InlineFormula"],
 " is satisfied:"
}], "Item",
 CellChangeTimes->{{3.6902207207226796`*^9, 3.6902207285199437`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"n", "<", "4"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "n", "]"}], ";", 
    RowBox[{"n", "++"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.690220754888262*^9, 3.6902207600603905`*^9}, {
  3.690220811171632*^9, 3.6902208263006816`*^9}, {3.69022088107963*^9, 
  3.6902208811577606`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"here", " ", "n"}], "<", 
   RowBox[{
   "4", " ", "is", " ", "test", " ", "and", " ", "remaining", " ", "is", " ", 
    RowBox[{"body", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6902208886581335`*^9, 3.6902208994695168`*^9}}],

Cell["post and pre increment works same as c/c++", "Item",
 CellChangeTimes->{{3.6902209028602705`*^9, 3.6902209170770545`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "++"}], "<", "4"}], ",", 
    RowBox[{"Print", "[", "n", "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"post", " ", "increment"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690220919749044*^9, 3.6902209663586617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.690220938925908*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.690220938941533*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.690220938941533*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"++", "n"}], "<", "4"}], ",", 
    RowBox[{"Print", "[", "n", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"pre", " ", "increment"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902209491974416`*^9, 3.6902209741090193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.6902209509475164`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6902209509475164`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For", "Section",
 CellChangeTimes->{{3.6902209973171735`*^9, 3.690220999520398*^9}}],

Cell[CellGroupData[{

Cell["\<\
 same as c/c++, it has 4 things intialise,test,increment,body\
\>", "Item",
 CellChangeTimes->{{3.6902210031345186`*^9, 3.6902210090254507`*^9}, {
  3.690221493929618*^9, 3.6902215177004786`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"For\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"start\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"incr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
executes \\!\\(\\*StyleBox[\\\"start\\\", \\\"TI\\\"]\\), then repeatedly \
evaluates \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"incr\\\", \\\"TI\\\"]\\) until \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) fails to give True. \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/For"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902210052283726`*^9},
 CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"],

Cell["example 1- Printing from 1 to 5", "Item",
 CellChangeTimes->{{3.690221521594593*^9, 3.690221563002896*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902215382829065`*^9, 3.690221573972184*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215744878073`*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.690221574519058*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
comma ends a part of For[] (applicable to all functions), and semicolon(;) \
ends one statement , so we can have multiple semicolon separated statements \
in a part.\
\>", "Item",
 CellChangeTimes->{{3.6902216033798532`*^9, 3.6902216040986323`*^9}, {
  3.6902218762745557`*^9, 3.690221976665059*^9}}],

Cell["Example ", "Item",
 CellChangeTimes->{{3.690221994572178*^9, 3.6902219999630947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"t", "=", "x"}]}], ",", 
   RowBox[{"i", "<", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{"i", "+", 
      RowBox[{"t", "^", "2"}]}]}], ";", 
    RowBox[{"Print", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690222018823388*^9, 3.690222039030697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["x", "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220392963047`*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220393119297`*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"2", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"]}], ")"}], "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220393119297`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"here", " ", "we", " ", "have", " ", "intialise", " ", "i"}], "=", 
   RowBox[{
    RowBox[{"1", " ", "and", " ", "t"}], "=", 
    RowBox[{
     RowBox[{
     "x", " ", "and", " ", "we", " ", "are", " ", "going", " ", "until", " ", 
      "i"}], "<", "4"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6902220426870975`*^9, 3.6902220658322425`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Break and Continue", "Section",
 CellChangeTimes->{{3.6902221217131557`*^9, 3.690222124525795*^9}}],

Cell[CellGroupData[{

Cell["Break[] breaks the nearest loop (same as c/c++)", "Item",
 CellChangeTimes->{{3.690222130432336*^9, 3.6902221591837664`*^9}, {
  3.6902222272415037`*^9, 3.6902222312769237`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Break\\\", \\\"[\\\", \\\"]\\\"}]\\) \
exits the nearest enclosing Do, For, or While. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Break"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690222132619936*^9},
 CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "1000"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "10"}], ",", 
      RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Print", "[", "i", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"show", " ", "i", " ", "after", " ", "For", " ", "ends"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902221923297*^9, 3.690222218366068*^9}}],

Cell[BoxData["11"], "Print",
 CellChangeTimes->{3.6902222186629295`*^9}]
}, Open  ]],

Cell["Break[] never passes any argument to itself", "Item",
 CellChangeTimes->{{3.6902222341676855`*^9, 3.6902222604658723`*^9}}],

Cell["\<\
Continue[] continues loop without executing rest of the body(same as c/c++)\
\>", "Item",
 CellChangeTimes->{{3.6902222694819126`*^9, 3.6902223046086636`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Continue\\\", \\\"[\\\", \\\"]\\\"}]\\) \
exits to the nearest enclosing Do, For, or While in a procedural program. \
\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Continue"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690222272888328*^9},
 CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"PrimeQ", "[", "i", "]"}]}], ",", 
      RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
    RowBox[{"Print", "[", "i", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902223430832043`*^9, 3.6902224183277197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.69022241924961*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.69022241924961*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.690222419265236*^9}}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.690222419265236*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table in Mathematica", "Chapter",
 CellChangeTimes->{{3.6902224893663907`*^9, 3.6902224944760437`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 Table is used to generate different types of list of values.\
\>", "Item",
 CellChangeTimes->{{3.6902258862499847`*^9, 3.6902259199722104`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Table"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690225890610882*^9},
 CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"],

Cell["\<\
 Table always have two parts expression and iterator.\[LineSeparator]iterator \
defines how many times the expression needs to be put in Table.\
\>", "Item",
 CellChangeTimes->{{3.6902260115511203`*^9, 3.6902260694034576`*^9}}],

Cell["Example 1- having a list of 9 \[OpenCurlyDoubleQuote]hello\
\[CloseCurlyDoubleQuote]", "Item",
 CellChangeTimes->{{3.690226141958663*^9, 3.690226186966522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\"\<hello\>\"", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.690226165237997*^9, 3.6902261970164185`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", 
   ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", 
   ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6902261973216205`*^9}]
}, Open  ]],

Cell["Example 2- having list of squares of number 1 to 10", "Item",
 CellChangeTimes->{{3.6902262020717773`*^9, 3.690226263857828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902262655199323`*^9, 3.690226273279088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6902262737123737`*^9}]
}, Open  ]],

Cell["as 1 is by default imin we can use", "Item",
 CellChangeTimes->{{3.6902262803427787`*^9, 3.690226297958007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902262999593334`*^9, 3.6902263078815947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.690226308152774*^9}]
}, Open  ]],

Cell["Example 3 - Make a 4\[Times]3 matrix:", "Item",
 CellChangeTimes->{{3.6902264257344947`*^9, 3.6902264362347913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.690226439795314*^9, 3.690226474703317*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "4", "5", "6"},
     {"3", "4", "5", "6", "7"},
     {"4", "5", "6", "7", "8"},
     {"5", "6", "7", "8", "9"},
     {"6", "7", "8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.690226460232442*^9, 3.6902264750033607`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table is most commonly used for Plotting ", "Item",
 CellChangeTimes->{{3.6902264871664753`*^9, 3.690226500627781*^9}}],

Cell["Example 4 - plot primes first 50 Primes", "Item",
 CellChangeTimes->{{3.6902265030231433`*^9, 3.690226511221411*^9}, {
  3.6902270997549133`*^9, 3.6902271047147255`*^9}, {3.690227305834883*^9, 
  3.690227307040064*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Prime", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690226513710944*^9, 3.690226533906339*^9}, {
   3.69022667172009*^9, 3.6902266979110403`*^9}, 3.6902267936767*^9, {
   3.6902271107239695`*^9, 3.6902271202993145`*^9}, {3.690227287394812*^9, 
   3.690227315069352*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1UtOwlAYxfHGEUMGDBgwQEIIIYTwfj8qvk00isb4SqwoapTELXQVjrsU
lsISXIKa+7836VkDTcjpj9OW0psv3Z5/zRZbnud9/33+02w/E3b8eCYkU2SS
zMj3BTJNluS4GpklG2SO7JB5ciTXnZBFk+E0/jvhHi7jfVzBh7iKT+L3FZ7i
Oj6L3+fqHDfxBW6Z9Ge4TX8Z/1+rK9zl+Gvcwze4j2/xgPOth/gO85z8ezzG
D5jntnrEvskgMBni7BP9Dj0OcTSnn5pcY7sO0TP9Lue/0OM19linaEGPg1d6
1i3Cdh3Xb/QH3O87PY6wxzqvbY+DD/oj+k96HCzpj7metZsPu/lxJsRJcUqc
FmfEWXFOnBcXxEVxSVwWV8RVcU1cFzfETXFL3BZ3xF1xT9wXD8RD8Ug8Fk/E
ftyh2M6H68V2PlwvtvPherGdD9eL7Xy4Xmznw/ViOx+uF9v5cL3YzofbNu8P
4837w/Sb94e53tL/Bao9uFA=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{51, 1}],
        LineBox[{52, 2}], LineBox[{53, 3}], LineBox[{54, 4}], 
       LineBox[{55, 5}], LineBox[{56, 6}], LineBox[{57, 7}], LineBox[{58, 8}],
        LineBox[{59, 9}], LineBox[{60, 10}], LineBox[{61, 11}], 
       LineBox[{62, 12}], LineBox[{63, 13}], LineBox[{64, 14}], 
       LineBox[{65, 15}], LineBox[{66, 16}], LineBox[{67, 17}], 
       LineBox[{68, 18}], LineBox[{69, 19}], LineBox[{70, 20}], 
       LineBox[{71, 21}], LineBox[{72, 22}], LineBox[{73, 23}], 
       LineBox[{74, 24}], LineBox[{75, 25}], LineBox[{76, 26}], 
       LineBox[{77, 27}], LineBox[{78, 28}], LineBox[{79, 29}], 
       LineBox[{80, 30}], LineBox[{81, 31}], LineBox[{82, 32}], 
       LineBox[{83, 33}], LineBox[{84, 34}], LineBox[{85, 35}], 
       LineBox[{86, 36}], LineBox[{87, 37}], LineBox[{88, 38}], 
       LineBox[{89, 39}], LineBox[{90, 40}], LineBox[{91, 41}], 
       LineBox[{92, 42}], LineBox[{93, 43}], LineBox[{94, 44}], 
       LineBox[{95, 45}], LineBox[{96, 46}], LineBox[{97, 47}], 
       LineBox[{98, 48}], LineBox[{99, 49}], LineBox[{100, 50}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
        127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
        141, 142, 143, 144, 145, 146, 147, 148, 149, 150}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 50.}, {0, 229.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6902265344967265`*^9, 3.6902266995167418`*^9, 3.690226794776867*^9, {
   3.690227116363717*^9, 3.690227120704376*^9}, {3.690227293220541*^9, 
   3.6902273155928173`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690229351526173*^9, 3.690229351535179*^9}}],

Cell["", "Subsection",
 CellChangeTimes->{{3.6902207180506854`*^9, 3.690220718925726*^9}, 
   3.6902290704411488`*^9}]
}, Open  ]]
},
PrintingStyleEnvironment->"SlideShow",
WindowSize->{744, 669},
WindowMargins->{{-3, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-913b775d-8622-437f-a24c-3c3cd89342aa"->{
  Cell[5713, 188, 2193, 36, 96, "Print",
   CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]},
 "Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"->{
  Cell[8701, 254, 193, 3, 48, "Print",
   CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]},
 "Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"->{
  Cell[12630, 383, 866, 17, 74, "Print",
   CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"]},
 "Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"->{
  Cell[14680, 427, 1395, 23, 118, "Print",
   CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]},
 "Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"->{
  Cell[16251, 460, 574, 13, 52, "Print",
   CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"]},
 "Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"->{
  Cell[16828, 475, 835, 17, 74, "Print",
   CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"]},
 "Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"->{
  Cell[17666, 494, 652, 14, 52, "Print",
   CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]},
 "Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"->{
  Cell[20709, 607, 2034, 34, 76, "Print",
   CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"]},
 "Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"->{
  Cell[66467, 2125, 1164, 21, 118, "Print",
   CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"],
  Cell[68787, 2192, 200, 4, 27, "Print",
   CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"]},
 "Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"->{
  Cell[209594, 6353, 1995, 33, 96, "Print",
   CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"]},
 "Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"->{
  Cell[216250, 6522, 450, 11, 52, "Print",
   CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"]},
 "Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"->{
  Cell[234484, 7046, 477, 11, 74, "Print",
   CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"]},
 "Info-59173d98-7577-4534-ad73-126483fd6107"->{
  Cell[237980, 7141, 419, 10, 52, "Print",
   CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"]},
 "Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"->{
  Cell[238402, 7153, 425, 10, 52, "Print",
   CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]},
 "Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"->{
  Cell[377312, 9715, 453, 11, 74, "Print",
   CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"]},
 "Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"->{
  Cell[417345, 10619, 2153, 36, 96, "Print",
   CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"]},
 "Info-562778dd-e1af-41c8-99f3-a4833404956e"->{
  Cell[477914, 11748, 5285, 79, 248, "Print",
   CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"]},
 "Info-6424051e-3917-44ae-9e51-993fdc960592"->{
  Cell[495985, 12150, 2980, 46, 138, "Print",
   CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"]},
 "Info-831920e9-1d2b-4e20-8db7-accb13fad66d"->{
  Cell[502675, 12295, 1127, 21, 72, "Print",
   CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"]},
 "Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"->{
  Cell[549838, 13112, 1138, 20, 88, "Print",
   CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"]},
 "Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"->{
  Cell[552231, 13180, 3838, 59, 247, "Print",
   CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"]},
 "Info-d985ebce-900e-4a90-930a-399ca16133dc"->{
  Cell[559448, 13364, 694, 14, 61, "Print",
   CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"]},
 "Info-bd6ea501-3291-4107-8607-d11b18098119"->{
  Cell[563580, 13505, 846, 17, 61, "Print",
   CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"]},
 "Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"->{
  Cell[567771, 13641, 439, 11, 61, "Print",
   CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"]},
 "Info-0d428704-2979-4809-b2e4-e8a0d2525948"->{
  Cell[569153, 13685, 471, 11, 61, "Print",
   CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"]},
 "Info-fcf33395-6733-4906-b49c-e1e329cde97d"->{
  Cell[570837, 13745, 3742, 57, 220, "Print",
   CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-913b775d-8622-437f-a24c-3c3cd89342aa", 582731, 14026},
 {"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016", 582880, 14029},
 {"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d", 583027, 14032},
 {"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b", 583176, 14035},
 {"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89", 583327, 14038},
 {"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e", 583476, 14041},
 {"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a", 583625, 14044},
 {"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691", 583774, 14047},
 {"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0", 583924, 14050},
 {"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28", 584176, 14055},
 {"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57", 584328, 14058},
 {"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2", 584479, 14061},
 {"Info-59173d98-7577-4534-ad73-126483fd6107", 584630, 14064},
 {"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0", 584781, 14067},
 {"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06", 584932, 14070},
 {"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf", 585083, 14073},
 {"Info-562778dd-e1af-41c8-99f3-a4833404956e", 585236, 14076},
 {"Info-6424051e-3917-44ae-9e51-993fdc960592", 585390, 14079},
 {"Info-831920e9-1d2b-4e20-8db7-accb13fad66d", 585544, 14082},
 {"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3", 585697, 14085},
 {"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b", 585850, 14088},
 {"Info-d985ebce-900e-4a90-930a-399ca16133dc", 586004, 14091},
 {"Info-bd6ea501-3291-4107-8607-d11b18098119", 586156, 14094},
 {"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff", 586308, 14097},
 {"Info-0d428704-2979-4809-b2e4-e8a0d2525948", 586460, 14100},
 {"Info-fcf33395-6733-4906-b49c-e1e329cde97d", 586612, 14103}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 2, 88, "Chapter"],
Cell[CellGroupData[{
Cell[759, 28, 330, 4, 34, "Item"],
Cell[1092, 34, 522, 10, 76, "Item"],
Cell[1617, 46, 173, 5, 35, "Item"],
Cell[1793, 53, 171, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2001, 60, 96, 1, 36, "Input"],
Cell[2100, 63, 76, 1, 36, "Output"]
}, Open  ]],
Cell[2191, 67, 475, 10, 60, "Item"],
Cell[CellGroupData[{
Cell[2691, 81, 98, 1, 36, "Item"],
Cell[2792, 84, 89, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2918, 90, 103, 3, 36, "Input"],
Cell[3024, 95, 137, 2, 36, "Output"]
}, Open  ]],
Cell[3176, 100, 239, 7, 34, "Item"],
Cell[CellGroupData[{
Cell[3440, 111, 118, 2, 36, "Input"],
Cell[3561, 115, 95, 2, 36, "Output"]
}, Open  ]],
Cell[3671, 120, 101, 1, 34, "Item"],
Cell[3775, 123, 89, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[3889, 128, 269, 5, 35, "Input"],
Cell[4161, 135, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4271, 141, 261, 7, 35, "Input"],
Cell[4535, 150, 74, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4646, 156, 122, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[4793, 161, 132, 1, 34, "Item"],
Cell[4928, 164, 296, 5, 53, "Item"],
Cell[5227, 171, 155, 3, 34, "Item"]
}, Open  ]],
Cell[5397, 177, 175, 3, 35, "Input"],
Cell[CellGroupData[{
Cell[5597, 184, 113, 2, 35, "Input"],
Cell[5713, 188, 2193, 36, 96, "Print",
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],
Cell[7921, 227, 223, 6, 35, "Input"],
Cell[8147, 235, 204, 4, 34, "Item"],
Cell[8354, 241, 203, 5, 35, "Input"],
Cell[CellGroupData[{
Cell[8582, 250, 116, 2, 35, "Input"],
Cell[8701, 254, 193, 3, 48, "Print",
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],
Cell[8909, 260, 71, 1, 35, "Input"],
Cell[8983, 263, 148, 8, 139, "Section"],
Cell[CellGroupData[{
Cell[9156, 275, 239, 4, 53, "Item"],
Cell[9398, 281, 258, 5, 53, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9717, 293, 120, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[9862, 298, 167, 3, 34, "Item"],
Cell[10032, 303, 251, 5, 53, "Item"],
Cell[10286, 310, 270, 5, 53, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10593, 320, 378, 9, 35, "Input"],
Cell[10974, 331, 151, 3, 36, "Output"]
}, Open  ]],
Cell[11140, 337, 422, 11, 35, "Input"],
Cell[11565, 350, 275, 6, 97, "Text"],
Cell[CellGroupData[{
Cell[11865, 360, 112, 1, 34, "Item"],
Cell[11980, 363, 140, 1, 34, "Item"],
Cell[12123, 366, 130, 1, 53, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12302, 373, 139, 2, 86, "Chapter"],
Cell[CellGroupData[{
Cell[12466, 379, 161, 2, 34, "Item"],
Cell[12630, 383, 866, 17, 74, "Print",
 CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"],
Cell[13499, 402, 128, 1, 34, "Item"],
Cell[13630, 405, 209, 4, 34, "Item"],
Cell[13842, 411, 239, 3, 34, "Item"],
Cell[14084, 416, 275, 3, 34, "Item"],
Cell[14362, 421, 315, 4, 34, "Item"],
Cell[14680, 427, 1395, 23, 118, "Print",
 CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16112, 455, 114, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[16251, 460, 574, 13, 52, "Print",
 CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"],
Cell[16828, 475, 835, 17, 74, "Print",
 CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"],
Cell[17666, 494, 652, 14, 52, "Print",
 CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18355, 513, 258, 6, 35, "Input"],
Cell[18616, 521, 70, 1, 36, "Output"]
}, Open  ]],
Cell[18701, 525, 92, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[18818, 530, 121, 2, 35, "Input"],
Cell[18942, 534, 97, 2, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19076, 541, 140, 3, 35, "Input"],
Cell[19219, 546, 87, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19343, 552, 153, 3, 35, "Input"],
Cell[19499, 557, 192, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19728, 569, 155, 3, 35, "Input"],
Cell[19886, 574, 191, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20114, 586, 181, 4, 35, "Input"],
Cell[20298, 592, 250, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20585, 604, 121, 1, 34, "Item"],
Cell[20709, 607, 2034, 34, 76, "Print",
 CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"],
Cell[CellGroupData[{
Cell[22768, 645, 173, 5, 35, "Input"],
Cell[22944, 652, 1103, 37, 55, "Output"]
}, Open  ]],
Cell[24062, 692, 106, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24205, 698, 622, 15, 58, "Input"],
Cell[24830, 715, 698, 21, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25565, 741, 278, 7, 35, "Input"],
Cell[25846, 750, 342, 10, 55, "Output"]
}, Open  ]],
Cell[26203, 763, 84, 1, 35, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26336, 770, 122, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[26483, 775, 326, 6, 73, "Item"],
Cell[26812, 783, 181, 4, 34, "Item"]
}, Open  ]],
Cell[27008, 790, 197, 4, 35, "Input"],
Cell[27208, 796, 144, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[27377, 801, 113, 1, 35, "Input"],
Cell[27493, 804, 97, 2, 36, "Output"]
}, Open  ]],
Cell[27605, 809, 224, 5, 34, "Item"],
Cell[27832, 816, 148, 2, 35, "Input"],
Cell[27983, 820, 98, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[28106, 826, 127, 2, 35, "Input"],
Cell[28236, 830, 99, 2, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28384, 838, 105, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[28514, 843, 178, 2, 34, "Item"],
Cell[28695, 847, 307, 6, 53, "Item"],
Cell[29005, 855, 158, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29200, 863, 125, 2, 35, "Input"],
Cell[29328, 867, 498, 10, 25, "Message"],
Cell[29829, 879, 94, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29960, 885, 118, 2, 35, "Input"],
Cell[30081, 889, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30191, 895, 176, 4, 58, "Input"],
Cell[30370, 901, 92, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30499, 908, 178, 3, 35, "Input"],
Cell[30680, 913, 484, 9, 25, "Message"],
Cell[31167, 924, 95, 1, 36, "Output"]
}, Open  ]],
Cell[31277, 928, 139, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31453, 934, 128, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[31606, 939, 259, 5, 34, "Item"],
Cell[31868, 946, 244, 3, 34, "Item"],
Cell[32115, 951, 244, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32396, 959, 360, 9, 58, "Input"],
Cell[32759, 970, 162, 2, 181, "Output"]
}, Open  ]],
Cell[32936, 975, 96, 1, 35, "Input"],
Cell[33035, 978, 183, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[33243, 986, 132, 2, 35, "Input"],
Cell[33378, 990, 191, 4, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33606, 999, 204, 4, 34, "Item"],
Cell[33813, 1005, 160, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34010, 1013, 224, 5, 35, "Input"],
Cell[34237, 1020, 137, 2, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34423, 1028, 109, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[34557, 1033, 105, 1, 34, "Item"],
Cell[34665, 1036, 249, 5, 53, "Item"],
Cell[34917, 1043, 132, 1, 34, "Item"],
Cell[35052, 1046, 129, 1, 34, "Item"],
Cell[35184, 1049, 156, 3, 34, "Item"],
Cell[35343, 1054, 194, 2, 34, "Item"],
Cell[35540, 1058, 207, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35784, 1067, 127, 2, 35, "Input"],
Cell[35914, 1071, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36024, 1077, 168, 4, 35, "Input"],
Cell[36195, 1083, 140, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36372, 1089, 288, 7, 35, "Input"],
Cell[36663, 1098, 214, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36914, 1108, 130, 2, 35, "Input"],
Cell[37047, 1112, 94, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37178, 1118, 99, 1, 35, "Input"],
Cell[37280, 1121, 188, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37505, 1131, 130, 2, 35, "Input"],
Cell[37638, 1135, 75, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37750, 1141, 130, 2, 35, "Input"],
Cell[37883, 1145, 205, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38125, 1155, 170, 4, 35, "Input"],
Cell[38298, 1161, 100, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38435, 1167, 130, 2, 35, "Input"],
Cell[38568, 1171, 96, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38701, 1177, 202, 5, 35, "Input"],
Cell[38906, 1184, 218, 7, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39173, 1197, 138, 2, 86, "Chapter"],
Cell[39314, 1201, 138, 1, 34, "Item"],
Cell[39455, 1204, 71, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[39551, 1209, 108, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[39684, 1214, 195, 4, 35, "Input"],
Cell[39882, 1220, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40066, 1228, 181, 2, 34, "Item"],
Cell[40250, 1232, 128, 1, 34, "Item"],
Cell[40381, 1235, 184, 2, 34, "Item"],
Cell[40568, 1239, 194, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40799, 1246, 128, 2, 35, "Input"],
Cell[40930, 1250, 145, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41112, 1258, 153, 3, 35, "Input"],
Cell[41268, 1263, 223, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41528, 1273, 161, 3, 35, "Input"],
Cell[41692, 1278, 141, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41870, 1286, 172, 4, 35, "Input"],
Cell[42045, 1292, 300, 8, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42394, 1306, 121, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[42540, 1311, 158, 3, 34, "Item"],
Cell[42701, 1316, 123, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42861, 1322, 302, 6, 35, "Input"],
Cell[43166, 1330, 250, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43453, 1340, 151, 3, 35, "Input"],
Cell[43607, 1345, 122, 2, 36, "Output"]
}, Open  ]],
Cell[43744, 1350, 159, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[43928, 1357, 166, 4, 35, "Input"],
Cell[44097, 1363, 95, 1, 36, "Output"]
}, Open  ]],
Cell[44207, 1367, 170, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[44402, 1374, 371, 10, 35, "Input"],
Cell[44776, 1386, 168, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44981, 1395, 174, 4, 34, "Item"],
Cell[45158, 1401, 202, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45397, 1411, 174, 4, 35, "Input"],
Cell[45574, 1417, 148, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45759, 1425, 457, 11, 58, "Input"],
Cell[46219, 1438, 182, 4, 36, "Output"]
}, Open  ]],
Cell[46416, 1445, 144, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[46585, 1450, 341, 8, 35, "Input"],
Cell[46929, 1460, 124, 2, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47090, 1467, 101, 1, 35, "Input"],
Cell[47194, 1470, 200, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47431, 1479, 393, 10, 35, "Input"],
Cell[47827, 1491, 173, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48037, 1499, 97, 1, 35, "Input"],
Cell[48137, 1502, 172, 3, 36, "Output"]
}, Open  ]],
Cell[48324, 1508, 148, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[48497, 1514, 235, 6, 35, "Input"],
Cell[48735, 1522, 70, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48842, 1528, 97, 1, 35, "Input"],
Cell[48942, 1531, 220, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49199, 1540, 160, 3, 34, "Item"],
Cell[49362, 1545, 226, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49625, 1555, 474, 12, 58, "Input"],
Cell[50102, 1569, 172, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50323, 1578, 127, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[50475, 1583, 102, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[50602, 1588, 221, 5, 35, "Input"],
Cell[50826, 1595, 237, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51100, 1605, 150, 3, 35, "Input"],
Cell[51253, 1610, 531, 11, 25, "Message"],
Cell[51787, 1623, 309, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52133, 1635, 186, 2, 34, "Item"],
Cell[52322, 1639, 213, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52572, 1648, 458, 10, 58, "Input"],
Cell[53033, 1660, 308, 7, 36, "Output"]
}, Open  ]],
Cell[53356, 1670, 157, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[53538, 1677, 183, 4, 35, "Input"],
Cell[53724, 1683, 259, 5, 36, "Output"]
}, Open  ]],
Cell[53998, 1691, 231, 5, 34, "Item"],
Cell[CellGroupData[{
Cell[54254, 1700, 243, 6, 35, "Input"],
Cell[54500, 1708, 303, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54840, 1720, 276, 8, 35, "Input"],
Cell[55119, 1730, 406, 11, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55574, 1747, 104, 1, 57, "Subsection"],
Cell[55681, 1750, 166, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[55872, 1757, 99, 1, 35, "Input"],
Cell[55974, 1760, 250, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56261, 1771, 235, 5, 35, "Input"],
Cell[56499, 1778, 238, 5, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56798, 1790, 218, 3, 85, "Section"],
Cell[57019, 1795, 139, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[57183, 1800, 191, 4, 35, "Input"],
Cell[57377, 1806, 237, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57651, 1816, 129, 2, 35, "Input"],
Cell[57783, 1820, 73, 1, 36, "Output"]
}, Open  ]],
Cell[57871, 1824, 159, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[58055, 1831, 152, 3, 35, "Input"],
Cell[58210, 1836, 72, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58319, 1842, 213, 4, 34, "Item"],
Cell[58535, 1848, 180, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58752, 1855, 157, 3, 35, "Input"],
Cell[58912, 1860, 142, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59091, 1868, 266, 6, 35, "Input"],
Cell[59360, 1876, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59612, 1886, 232, 4, 35, "Input"],
Cell[59847, 1892, 251, 7, 36, "Output"]
}, Open  ]],
Cell[60113, 1902, 142, 1, 34, "Item"],
Cell[60258, 1905, 194, 4, 35, "Input"],
Cell[60455, 1911, 323, 8, 35, "Input"],
Cell[60781, 1921, 92, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[60898, 1926, 111, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[61034, 1931, 123, 1, 34, "Item"],
Cell[61160, 1934, 155, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61352, 1942, 193, 4, 35, "Input"],
Cell[61548, 1948, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61800, 1958, 130, 2, 35, "Input"],
Cell[61933, 1962, 74, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62044, 1968, 127, 2, 35, "Input"],
Cell[62174, 1972, 73, 1, 36, "Output"]
}, Open  ]],
Cell[62262, 1976, 193, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[62480, 1982, 178, 4, 35, "Input"],
Cell[62661, 1988, 205, 5, 36, "Output"]
}, Open  ]],
Cell[62881, 1996, 137, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[63043, 2002, 273, 6, 58, "Input"],
Cell[63319, 2010, 209, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63565, 2020, 228, 5, 34, "Item"],
Cell[63796, 2027, 183, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64016, 2034, 176, 4, 35, "Input"],
Cell[64195, 2040, 202, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64434, 2050, 136, 2, 35, "Input"],
Cell[64573, 2054, 194, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64804, 2064, 141, 1, 34, "Item"],
Cell[64948, 2067, 126, 1, 34, "Item"]
}, Open  ]],
Cell[65089, 2071, 117, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[65231, 2077, 212, 5, 35, "Input"],
Cell[65446, 2084, 158, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65641, 2093, 133, 2, 35, "Input"],
Cell[65777, 2097, 211, 6, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66049, 2110, 115, 1, 85, "Section"],
Cell[66167, 2113, 182, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[66374, 2121, 90, 2, 35, "Input"],
Cell[66467, 2125, 1164, 21, 118, "Print",
 CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67668, 2151, 124, 2, 35, "Input"],
Cell[67795, 2155, 92, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67924, 2161, 281, 7, 35, "Input"],
Cell[68208, 2170, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68318, 2176, 389, 11, 35, "Input"],
Cell[68710, 2189, 74, 1, 36, "Output"],
Cell[68787, 2192, 200, 4, 27, "Print",
 CellTags->"Info-c24ff3e1-0e29-4f3e-8cdb-b8395258bcb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69024, 2201, 107, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[69156, 2206, 192, 2, 34, "Item"],
Cell[69351, 2210, 231, 5, 53, "Item"],
Cell[69585, 2217, 163, 2, 34, "Item"],
Cell[69751, 2221, 373, 6, 53, "Item"],
Cell[70127, 2229, 318, 6, 53, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70494, 2241, 104, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[70623, 2246, 126, 1, 34, "Item"],
Cell[70752, 2249, 133, 1, 34, "Item"],
Cell[70888, 2252, 141, 1, 34, "Item"],
Cell[71032, 2255, 210, 4, 34, "Item"],
Cell[71245, 2261, 219, 4, 34, "Item"]
}, Open  ]],
Cell[71479, 2268, 385, 7, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71913, 2281, 172, 2, 85, "Section"],
Cell[CellGroupData[{
Cell[72110, 2287, 97, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[72232, 2292, 330, 6, 35, "Input"],
Cell[72565, 2300, 266, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72868, 2311, 163, 3, 34, "Item"],
Cell[73034, 2316, 214, 3, 53, "Item"]
}, Open  ]],
Cell[73263, 2322, 405, 7, 58, "Input"],
Cell[CellGroupData[{
Cell[73693, 2333, 198, 3, 35, "Input"],
Cell[73894, 2338, 316, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74247, 2350, 212, 5, 35, "Input"],
Cell[74462, 2357, 235, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74734, 2367, 281, 7, 35, "Input"],
Cell[75018, 2376, 213, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75268, 2386, 154, 3, 35, "Input"],
Cell[75425, 2391, 213, 5, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75687, 2402, 98, 1, 57, "Subsection"],
Cell[75788, 2405, 127, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[75940, 2410, 128, 2, 35, "Input"],
Cell[76071, 2414, 212, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76320, 2424, 69, 1, 35, "Input"],
Cell[76392, 2427, 212, 5, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76653, 2438, 100, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[76778, 2443, 133, 1, 34, "Item"],
Cell[76914, 2446, 175, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77126, 2455, 198, 4, 35, "Input"],
Cell[77327, 2461, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77511, 2469, 164, 3, 34, "Item"],
Cell[77678, 2474, 168, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77883, 2482, 156, 3, 35, "Input"],
Cell[78042, 2487, 224, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78303, 2497, 187, 4, 35, "Input"],
Cell[78493, 2503, 375, 11, 36, "Output"]
}, Open  ]],
Cell[78883, 2517, 176, 4, 34, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79108, 2527, 129, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[79262, 2532, 207, 4, 34, "Item"],
Cell[79472, 2538, 211, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79720, 2547, 215, 5, 35, "Input"],
Cell[79938, 2554, 152, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80127, 2562, 130, 2, 35, "Input"],
Cell[80260, 2566, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80368, 2572, 151, 3, 35, "Input"],
Cell[80522, 2577, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80632, 2583, 126, 2, 35, "Input"],
Cell[80761, 2587, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80871, 2593, 168, 4, 35, "Input"],
Cell[81042, 2599, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81152, 2605, 184, 4, 35, "Input"],
Cell[81339, 2611, 71, 1, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81459, 2618, 113, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[81597, 2623, 238, 5, 35, "Input"],
Cell[81838, 2630, 225, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82100, 2640, 158, 3, 34, "Item"],
Cell[82261, 2645, 156, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82454, 2653, 235, 3, 57, "Subsection"],
Cell[CellGroupData[{
Cell[82714, 2660, 265, 5, 34, "Item"],
Cell[82982, 2667, 281, 3, 34, "Item"],
Cell[83266, 2672, 285, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83588, 2680, 147, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[83760, 2686, 125, 1, 34, "Item"],
Cell[83888, 2689, 694, 12, 135, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84631, 2707, 102, 1, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[84758, 2712, 442, 10, 80, "Input"],
Cell[85203, 2724, 171, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85411, 2732, 159, 3, 35, "Input"],
Cell[85573, 2737, 137, 3, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85771, 2747, 117, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[85913, 2752, 185, 2, 34, "Item"],
Cell[86101, 2756, 278, 5, 53, "Item"],
Cell[86382, 2763, 217, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86636, 2771, 204, 5, 35, "Input"],
Cell[86843, 2778, 227, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87107, 2788, 268, 6, 35, "Input"],
Cell[87378, 2796, 255, 5, 36, "Output"]
}, Open  ]],
Cell[87648, 2804, 238, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[87911, 2812, 368, 10, 58, "Input"],
Cell[88282, 2824, 169, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88488, 2833, 447, 13, 58, "Input"],
Cell[88938, 2848, 153, 3, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89152, 2858, 122, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[89299, 2863, 154, 3, 34, "Item"],
Cell[89456, 2868, 126, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89619, 2874, 290, 7, 35, "Input"],
Cell[89912, 2883, 206, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90155, 2893, 139, 2, 35, "Input"],
Cell[90297, 2897, 199, 4, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90545, 2907, 112, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[90682, 2912, 338, 8, 35, "Input"],
Cell[91023, 2922, 224, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91284, 2932, 362, 8, 35, "Input"],
Cell[91649, 2942, 213, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91899, 2952, 190, 4, 35, "Input"],
Cell[92092, 2958, 233, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92362, 2968, 118, 1, 57, "Subsection"],
Cell[92483, 2971, 174, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[92682, 2979, 276, 5, 35, "Input"],
Cell[92961, 2986, 488, 9, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93486, 3000, 157, 3, 34, "Item"],
Cell[93646, 3005, 175, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93858, 3014, 99, 1, 35, "Input"],
Cell[93960, 3017, 212, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94209, 3027, 200, 4, 35, "Input"],
Cell[94412, 3033, 149, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94610, 3042, 135, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[94770, 3047, 367, 9, 35, "Input"],
Cell[95140, 3058, 188, 4, 36, "Output"]
}, Open  ]],
Cell[95343, 3065, 162, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[95530, 3072, 99, 1, 35, "Input"],
Cell[95632, 3075, 186, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95855, 3085, 130, 2, 35, "Input"],
Cell[95988, 3089, 148, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96185, 3098, 147, 1, 57, "Subsection"],
Cell[96335, 3101, 169, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[96529, 3108, 129, 2, 35, "Input"],
Cell[96661, 3112, 186, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96884, 3122, 99, 1, 35, "Input"],
Cell[96986, 3125, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97170, 3133, 162, 3, 35, "Input"],
Cell[97335, 3138, 128, 3, 36, "Output"]
}, Open  ]],
Cell[97478, 3144, 156, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[97659, 3151, 155, 3, 35, "Input"],
Cell[97817, 3156, 146, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98012, 3165, 94, 1, 57, "Subsection"],
Cell[98109, 3168, 133, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[98267, 3173, 231, 5, 35, "Input"],
Cell[98501, 3180, 179, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98717, 3189, 231, 5, 35, "Input"],
Cell[98951, 3196, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99135, 3204, 158, 3, 35, "Input"],
Cell[99296, 3209, 184, 4, 36, "Output"]
}, Open  ]],
Cell[99495, 3216, 212, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[99732, 3224, 280, 7, 35, "Input"],
Cell[100015, 3233, 216, 5, 36, "Output"]
}, Open  ]],
Cell[100246, 3241, 105, 1, 34, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100412, 3249, 120, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[100557, 3254, 116, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[100698, 3259, 212, 4, 34, "Item"],
Cell[100913, 3265, 174, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101124, 3272, 197, 4, 35, "Input"],
Cell[101324, 3278, 145, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101506, 3286, 291, 8, 35, "Input"],
Cell[101800, 3296, 287, 8, 36, "Output"]
}, Open  ]],
Cell[102102, 3307, 173, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[102300, 3315, 162, 3, 35, "Input"],
Cell[102465, 3320, 661, 18, 52, "Output"]
}, Open  ]],
Cell[103141, 3341, 402, 8, 58, "Input"],
Cell[CellGroupData[{
Cell[103568, 3353, 96, 1, 35, "Input"],
Cell[103667, 3356, 256, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103960, 3368, 348, 8, 35, "Input"],
Cell[104311, 3378, 259, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104607, 3390, 386, 8, 35, "Input"],
Cell[104996, 3400, 697, 19, 52, "Output"]
}, Open  ]],
Cell[105708, 3422, 351, 6, 73, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106096, 3433, 109, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[106230, 3438, 114, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[106369, 3443, 255, 5, 53, "Item"],
Cell[106627, 3450, 345, 6, 53, "Item"],
Cell[106975, 3458, 241, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107253, 3466, 337, 9, 35, "Input"],
Cell[107593, 3477, 257, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107887, 3489, 291, 8, 35, "Input"],
Cell[108181, 3499, 257, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108475, 3511, 147, 3, 35, "Input"],
Cell[108625, 3516, 235, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108897, 3528, 186, 4, 58, "Input"],
Cell[109086, 3534, 338, 12, 36, "Output"]
}, Open  ]],
Cell[109439, 3549, 167, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[109631, 3556, 134, 2, 35, "Input"],
Cell[109768, 3560, 117, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109934, 3569, 130, 2, 57, "Subsection"],
Cell[CellGroupData[{
Cell[110089, 3575, 184, 4, 34, "Item"],
Cell[110276, 3581, 206, 4, 34, "Item"],
Cell[110485, 3587, 369, 6, 53, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110891, 3598, 369, 10, 35, "Input"],
Cell[111263, 3610, 284, 8, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111584, 3623, 461, 13, 35, "Input"],
Cell[112048, 3638, 296, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112381, 3652, 361, 8, 35, "Input"],
Cell[112745, 3662, 294, 8, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113100, 3677, 104, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[113229, 3682, 402, 7, 92, "Item"],
Cell[113634, 3691, 267, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113938, 3701, 234, 6, 35, "Input"],
Cell[114175, 3709, 358, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114570, 3723, 131, 2, 35, "Input"],
Cell[114704, 3727, 676, 19, 72, "Output"]
}, Open  ]],
Cell[115395, 3749, 164, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[115584, 3756, 161, 3, 35, "Input"],
Cell[115748, 3761, 543, 14, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116328, 3780, 134, 2, 35, "Input"],
Cell[116465, 3784, 753, 21, 111, "Output"]
}, Open  ]],
Cell[117233, 3808, 168, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[117426, 3815, 250, 6, 35, "Input"],
Cell[117679, 3823, 642, 18, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118358, 3846, 245, 6, 35, "Input"],
Cell[118606, 3854, 741, 18, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119396, 3878, 109, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[119530, 3883, 289, 8, 35, "Input"],
Cell[119822, 3893, 235, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120094, 3905, 211, 4, 35, "Input"],
Cell[120308, 3911, 639, 18, 52, "Output"]
}, Open  ]],
Cell[120962, 3932, 128, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[121115, 3937, 225, 4, 35, "Input"],
Cell[121343, 3943, 696, 20, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122076, 3968, 127, 1, 34, "Item"],
Cell[122206, 3971, 120, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122363, 3977, 314, 10, 58, "Input"],
Cell[122680, 3989, 213, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122930, 4001, 211, 4, 35, "Input"],
Cell[123144, 4007, 302, 11, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123483, 4023, 292, 7, 35, "Input"],
Cell[123778, 4032, 215, 7, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124042, 4045, 123, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[124190, 4050, 207, 4, 53, "Item"],
Cell[124400, 4056, 219, 4, 53, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124656, 4065, 287, 8, 35, "Input"],
Cell[124946, 4075, 255, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125238, 4087, 292, 8, 35, "Input"],
Cell[125533, 4097, 262, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125832, 4109, 266, 7, 35, "Input"],
Cell[126101, 4118, 1103, 24, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127241, 4147, 681, 16, 101, "Input"],
Cell[127925, 4165, 698, 19, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128660, 4189, 158, 3, 35, "Input"],
Cell[128821, 4194, 644, 18, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129502, 4217, 211, 4, 35, "Input"],
Cell[129716, 4223, 814, 24, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130579, 4253, 125, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[130729, 4258, 291, 8, 35, "Input"],
Cell[131023, 4268, 262, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131322, 4280, 133, 2, 35, "Input"],
Cell[131458, 4284, 640, 18, 52, "Output"]
}, Open  ]],
Cell[132113, 4305, 244, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[132382, 4313, 341, 9, 35, "Input"],
Cell[132726, 4324, 93, 1, 36, "Output"]
}, Open  ]],
Cell[132834, 4328, 173, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[133032, 4334, 318, 9, 35, "Input"],
Cell[133353, 4345, 148, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133538, 4353, 173, 4, 35, "Input"],
Cell[133714, 4359, 140, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133891, 4367, 345, 6, 53, "Item"],
Cell[134239, 4375, 124, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134400, 4381, 318, 9, 35, "Input"],
Cell[134721, 4392, 151, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134909, 4400, 231, 6, 35, "Input"],
Cell[135143, 4408, 129, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135309, 4416, 224, 6, 35, "Input"],
Cell[135536, 4424, 142, 3, 36, "Output"]
}, Open  ]],
Cell[135693, 4430, 166, 3, 34, "Item"],
Cell[135862, 4435, 223, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[136110, 4445, 133, 2, 35, "Input"],
Cell[136246, 4449, 672, 18, 52, "Output"]
}, Open  ]],
Cell[136933, 4470, 96, 1, 35, "Input"],
Cell[137032, 4473, 94, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137163, 4479, 114, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[137302, 4484, 190, 2, 34, "Item"],
Cell[137495, 4488, 181, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137713, 4495, 290, 8, 35, "Input"],
Cell[138006, 4505, 233, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138276, 4517, 128, 2, 35, "Input"],
Cell[138407, 4521, 158, 4, 36, "Output"]
}, Open  ]],
Cell[138580, 4528, 94, 1, 35, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138723, 4535, 111, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[138859, 4540, 108, 1, 85, "Section"],
Cell[138970, 4543, 188, 4, 53, "Item"],
Cell[139161, 4549, 373, 10, 60, "Code"],
Cell[CellGroupData[{
Cell[139559, 4563, 177, 4, 34, "Item"],
Cell[139739, 4569, 143, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139919, 4575, 501, 12, 83, "Code"],
Cell[140423, 4589, 144, 2, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140604, 4596, 230, 4, 53, "Item"],
Cell[140837, 4602, 220, 4, 53, "Item"],
Cell[141060, 4608, 200, 4, 53, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141297, 4617, 120, 2, 35, "Input"],
Cell[141420, 4621, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141528, 4627, 129, 2, 35, "Input"],
Cell[141660, 4631, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141768, 4637, 241, 6, 35, "Input"],
Cell[142012, 4645, 93, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142142, 4651, 301, 6, 35, "Input"],
Cell[142446, 4659, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142554, 4665, 71, 1, 35, "Input"],
Cell[142628, 4668, 73, 1, 36, "Output"]
}, Open  ]],
Cell[142716, 4672, 301, 5, 37, "Item"],
Cell[CellGroupData[{
Cell[143042, 4681, 303, 8, 58, "Input"],
Cell[143348, 4691, 97, 1, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143494, 4698, 112, 1, 85, "Section"],
Cell[143609, 4701, 284, 6, 53, "Item"],
Cell[143896, 4709, 273, 7, 35, "Input"],
Cell[CellGroupData[{
Cell[144194, 4720, 305, 8, 35, "Input"],
Cell[144502, 4730, 126, 3, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144689, 4740, 110, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[144824, 4745, 95, 1, 85, "Section"],
Cell[144922, 4748, 249, 7, 35, "Input"],
Cell[145174, 4757, 163, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[145362, 4764, 133, 2, 35, "Input"],
Cell[145498, 4768, 6999, 187, 275, "Output"]
}, Open  ]],
Cell[152512, 4958, 134, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[152671, 4963, 137, 2, 35, "Input"],
Cell[152811, 4967, 20264, 474, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173112, 5446, 332, 6, 53, "Item"],
Cell[173447, 5454, 312, 6, 53, "Item"]
}, Open  ]],
Cell[173774, 5463, 614, 18, 58, "Input"],
Cell[CellGroupData[{
Cell[174413, 5485, 184, 3, 35, "Input"],
Cell[174600, 5490, 10890, 275, 279, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185539, 5771, 99, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[185663, 5776, 224, 5, 34, "Item"],
Cell[185890, 5783, 211, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186138, 5792, 240, 6, 35, "Input"],
Cell[186381, 5800, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186633, 5810, 234, 4, 35, "Input"],
Cell[186870, 5816, 2769, 77, 292, "Output"]
}, Open  ]],
Cell[189654, 5896, 176, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189867, 5905, 99, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[189991, 5910, 143, 1, 34, "Item"],
Cell[190137, 5913, 180, 2, 34, "Item"],
Cell[190320, 5917, 417, 7, 73, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190774, 5929, 275, 6, 35, "Input"],
Cell[191052, 5937, 1271, 31, 294, "Output"]
}, Open  ]],
Cell[192338, 5971, 393, 12, 35, "Input"],
Cell[CellGroupData[{
Cell[192756, 5987, 360, 11, 35, "Input"],
Cell[193119, 6000, 337, 11, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193493, 6016, 131, 2, 35, "Input"],
Cell[193627, 6020, 908, 25, 295, "Output"]
}, Open  ]],
Cell[194550, 6048, 357, 6, 53, "Item"],
Cell[CellGroupData[{
Cell[194932, 6058, 238, 5, 35, "Input"],
Cell[195173, 6065, 890, 25, 295, "Output"]
}, Open  ]],
Cell[196078, 6093, 387, 7, 53, "Item"],
Cell[CellGroupData[{
Cell[196490, 6104, 491, 13, 35, "Input"],
Cell[196984, 6119, 374, 11, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197395, 6135, 291, 4, 35, "Input"],
Cell[197689, 6141, 11414, 193, 284, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209152, 6340, 150, 2, 85, "Section"],
Cell[CellGroupData[{
Cell[209327, 6346, 264, 5, 53, "Item"],
Cell[209594, 6353, 1995, 33, 96, "Print",
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],
Cell[CellGroupData[{
Cell[211614, 6390, 560, 12, 80, "Input"],
Cell[212177, 6404, 958, 26, 294, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213184, 6436, 269, 6, 35, "Input"],
Cell[213456, 6444, 1114, 29, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214607, 6478, 323, 7, 60, "Code"],
Cell[214933, 6487, 248, 6, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215230, 6499, 108, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[215363, 6504, 134, 1, 34, "Item"],
Cell[215500, 6507, 400, 7, 53, "Item"],
Cell[215903, 6516, 344, 4, 34, "Item"],
Cell[216250, 6522, 450, 11, 52, "Print",
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],
Cell[CellGroupData[{
Cell[216725, 6537, 245, 5, 35, "Input"],
Cell[216973, 6544, 188, 4, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217210, 6554, 82, 2, 35, "Input"],
Cell[217295, 6558, 93, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217425, 6565, 99, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[217549, 6570, 301, 7, 35, "Input"],
Cell[217853, 6579, 6870, 187, 284, "Output"]
}, Open  ]],
Cell[224738, 6769, 364, 7, 73, "Item"],
Cell[CellGroupData[{
Cell[225127, 6780, 254, 6, 35, "Input"],
Cell[225384, 6788, 6896, 188, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232317, 6981, 567, 17, 58, "Input"],
Cell[232887, 7000, 881, 24, 290, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233817, 7030, 102, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[233944, 7035, 293, 4, 34, "Item"],
Cell[234240, 7041, 241, 3, 34, "Item"],
Cell[234484, 7046, 477, 11, 74, "Print",
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],
Cell[234964, 7059, 269, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235270, 7069, 446, 8, 35, "Input"],
Cell[235719, 7079, 1442, 33, 295, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237210, 7118, 95, 1, 57, "Subsection"],
Cell[CellGroupData[{
Cell[237330, 7123, 234, 3, 34, "Item"],
Cell[237567, 7128, 182, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237786, 7135, 169, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[237980, 7141, 419, 10, 52, "Print",
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],
Cell[238402, 7153, 425, 10, 52, "Print",
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],
Cell[238842, 7166, 108, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[238975, 7171, 688, 15, 35, "Input"],
Cell[239666, 7188, 7570, 162, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247273, 7355, 702, 19, 58, "Input"],
Cell[247978, 7376, 33917, 606, 288, "Output"]
}, Open  ]],
Cell[281910, 7985, 161, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[282096, 7991, 381, 10, 35, "Input"],
Cell[282480, 8003, 34174, 615, 288, "Output"]
}, Open  ]],
Cell[316669, 8621, 191, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[316885, 8629, 466, 12, 35, "Input"],
Cell[317354, 8643, 34019, 611, 288, "Output"]
}, Open  ]],
Cell[351388, 9257, 185, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[351598, 9263, 526, 13, 35, "Input"],
Cell[352127, 9278, 24511, 414, 303, "Output"]
}, Open  ]],
Cell[376653, 9695, 96, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376786, 9701, 168, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[376979, 9707, 164, 2, 34, "Item"],
Cell[377146, 9711, 163, 2, 34, "Item"],
Cell[377312, 9715, 453, 11, 74, "Print",
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],
Cell[CellGroupData[{
Cell[377790, 9730, 758, 20, 58, "Input"],
Cell[378551, 9752, 38448, 850, 299, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[417084, 10611, 105, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[417214, 10616, 128, 1, 34, "Item"],
Cell[417345, 10619, 2153, 36, 96, "Print",
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],
Cell[CellGroupData[{
Cell[419523, 10659, 391, 10, 35, "Input"],
Cell[419917, 10671, 8196, 147, 326, "Output"]
}, Open  ]]
}, Open  ]],
Cell[428140, 10822, 92, 1, 35, "Input"],
Cell[428235, 10825, 142, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[428402, 10830, 439, 12, 35, "Input"],
Cell[428844, 10844, 47807, 859, 295, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476712, 11710, 166, 2, 151, "Chapter"],
Cell[CellGroupData[{
Cell[476903, 11716, 104, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[477032, 11721, 215, 4, 54, "Item"],
Cell[477250, 11727, 319, 7, 74, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[477618, 11740, 131, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[477774, 11745, 137, 1, 34, "Item"],
Cell[477914, 11748, 5285, 79, 248, "Print",
 CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"],
Cell[483202, 11829, 537, 14, 80, "Code"],
Cell[483742, 11845, 236, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484015, 11853, 294, 7, 36, "Input"],
Cell[484312, 11862, 1545, 32, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485894, 11899, 700, 17, 36, "Input"],
Cell[486597, 11918, 1787, 36, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488421, 11959, 423, 12, 36, "Input"],
Cell[488847, 11973, 1658, 34, 379, "Output"]
}, Open  ]],
Cell[490520, 12010, 263, 5, 94, "Item"],
Cell[CellGroupData[{
Cell[490808, 12019, 529, 14, 60, "Input"],
Cell[491340, 12035, 1635, 34, 143, "Output"]
}, Open  ]],
Cell[492990, 12072, 125, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[493140, 12077, 572, 17, 64, "Input"],
Cell[493715, 12096, 1893, 39, 453, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495657, 12141, 119, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[495801, 12146, 181, 2, 34, "Item"],
Cell[495985, 12150, 2980, 46, 138, "Print",
 CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"],
Cell[498968, 12198, 308, 6, 54, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499313, 12209, 550, 14, 60, "Input"],
Cell[499866, 12225, 2032, 40, 379, "Output"]
}, Open  ]],
Cell[501913, 12268, 268, 5, 54, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502230, 12279, 101, 1, 88, "Chapter"],
Cell[CellGroupData[{
Cell[502356, 12284, 101, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[502482, 12289, 190, 4, 54, "Item"],
Cell[502675, 12295, 1127, 21, 72, "Print",
 CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"],
Cell[503805, 12318, 39746, 658, 129, 5222, 90, "CachedBoxData", "BoxData", \
"Input"]
}, Open  ]],
Cell[543566, 12979, 5266, 91, 131, "Input"],
Cell[548835, 13072, 189, 6, 36, "Input"],
Cell[CellGroupData[{
Cell[549049, 13082, 122, 2, 42, "Input"],
Cell[549174, 13086, 70, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549281, 13092, 122, 2, 42, "Input"],
Cell[549406, 13096, 70, 1, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549525, 13103, 102, 1, 102, "Section"],
Cell[CellGroupData[{
Cell[549652, 13108, 183, 2, 40, "Item"],
Cell[549838, 13112, 1138, 20, 88, "Print",
 CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"],
Cell[CellGroupData[{
Cell[551001, 13136, 540, 14, 69, "Input"],
Cell[551544, 13152, 123, 2, 46, "Output"]
}, Open  ]],
Cell[551682, 13157, 155, 3, 44, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[551898, 13167, 105, 1, 112, "Chapter"],
Cell[CellGroupData[{
Cell[552028, 13172, 88, 1, 111, "Section"],
Cell[CellGroupData[{
Cell[552141, 13177, 87, 1, 40, "Item"],
Cell[552231, 13180, 3838, 59, 247, "Print",
 CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"],
Cell[556072, 13241, 122, 1, 40, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556231, 13247, 214, 5, 42, "Input"],
Cell[CellGroupData[{
Cell[556470, 13256, 105, 1, 31, "Print"],
Cell[556578, 13259, 105, 1, 31, "Print"],
Cell[556686, 13262, 105, 1, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[556818, 13267, 176, 2, 40, "Item"],
Cell[CellGroupData[{
Cell[557019, 13273, 501, 13, 69, "Input"],
Cell[CellGroupData[{
Cell[557545, 13290, 71, 1, 31, "Print"],
Cell[557619, 13293, 71, 1, 31, "Print"],
Cell[557693, 13296, 71, 1, 31, "Print"],
Cell[557767, 13299, 72, 1, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[557866, 13304, 180, 2, 40, "Item"],
Cell[CellGroupData[{
Cell[558071, 13310, 558, 17, 69, "Input"],
Cell[CellGroupData[{
Cell[558654, 13331, 88, 2, 31, "Print"],
Cell[558745, 13335, 88, 2, 31, "Print"],
Cell[558836, 13339, 71, 1, 31, "Print"],
Cell[558910, 13342, 71, 1, 31, "Print"],
Cell[558984, 13345, 71, 1, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[559082, 13350, 94, 1, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559213, 13356, 90, 1, 102, "Section"],
Cell[CellGroupData[{
Cell[559328, 13361, 117, 1, 40, "Item"],
Cell[559448, 13364, 694, 14, 61, "Print",
 CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"],
Cell[560145, 13380, 321, 11, 43, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560503, 13396, 423, 11, 69, "Input"],
Cell[CellGroupData[{
Cell[560951, 13411, 197, 3, 31, "Print"],
Cell[561151, 13416, 197, 3, 31, "Print"],
Cell[561351, 13421, 197, 3, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[561575, 13428, 297, 7, 42, "Input"],
Cell[561875, 13437, 128, 1, 40, "Item"],
Cell[CellGroupData[{
Cell[562028, 13442, 352, 10, 42, "Input"],
Cell[CellGroupData[{
Cell[562405, 13456, 69, 1, 31, "Print"],
Cell[562477, 13459, 69, 1, 31, "Print"],
Cell[562549, 13462, 69, 1, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[562667, 13469, 358, 10, 42, "Input"],
Cell[CellGroupData[{
Cell[563050, 13483, 71, 1, 31, "Print"],
Cell[563124, 13486, 71, 1, 31, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563256, 13494, 90, 1, 102, "Section"],
Cell[CellGroupData[{
Cell[563371, 13499, 206, 4, 40, "Item"],
Cell[563580, 13505, 846, 17, 61, "Print",
 CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"],
Cell[564429, 13524, 113, 1, 40, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564579, 13530, 279, 7, 42, "Input"],
Cell[CellGroupData[{
Cell[564883, 13541, 97, 1, 31, "Print"],
Cell[564983, 13544, 97, 1, 31, "Print"],
Cell[565083, 13547, 97, 1, 31, "Print"],
Cell[565183, 13550, 97, 1, 31, "Print"],
Cell[565283, 13553, 95, 1, 31, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565427, 13560, 310, 6, 63, "Item"],
Cell[565740, 13568, 92, 1, 40, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565869, 13574, 419, 13, 42, "Input"],
Cell[CellGroupData[{
Cell[566313, 13591, 141, 3, 31, "Print"],
Cell[566457, 13596, 217, 6, 36, "Print"],
Cell[566677, 13604, 302, 9, 36, "Print"]
}, Open  ]]
}, Open  ]],
Cell[567006, 13617, 411, 10, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567454, 13632, 105, 1, 102, "Section"],
Cell[CellGroupData[{
Cell[567584, 13637, 184, 2, 40, "Item"],
Cell[567771, 13641, 439, 11, 61, "Print",
 CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"],
Cell[CellGroupData[{
Cell[568235, 13656, 524, 15, 69, "Input"],
Cell[568762, 13673, 72, 1, 31, "Print"]
}, Open  ]],
Cell[568849, 13677, 129, 1, 40, "Item"],
Cell[568981, 13680, 169, 3, 40, "Item"],
Cell[569153, 13685, 471, 11, 61, "Print",
 CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"],
Cell[CellGroupData[{
Cell[569649, 13700, 407, 12, 42, "Input"],
Cell[CellGroupData[{
Cell[570081, 13716, 92, 1, 31, "Print"],
Cell[570176, 13719, 92, 1, 31, "Print"],
Cell[570271, 13722, 93, 1, 31, "Print"],
Cell[570367, 13725, 93, 1, 31, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570545, 13735, 109, 1, 103, "Chapter"],
Cell[CellGroupData[{
Cell[570679, 13740, 155, 3, 40, "Item"],
Cell[570837, 13745, 3742, 57, 220, "Print",
 CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"],
Cell[574582, 13804, 237, 4, 63, "Item"],
Cell[574822, 13810, 166, 2, 40, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575025, 13817, 161, 3, 42, "Input"],
Cell[575189, 13822, 306, 6, 43, "Output"]
}, Open  ]],
Cell[575510, 13831, 135, 1, 40, "Item"],
Cell[CellGroupData[{
Cell[575670, 13836, 233, 6, 42, "Input"],
Cell[575906, 13844, 212, 5, 43, "Output"]
}, Open  ]],
Cell[576133, 13852, 118, 1, 40, "Item"],
Cell[CellGroupData[{
Cell[576276, 13857, 225, 6, 42, "Input"],
Cell[576504, 13865, 210, 5, 43, "Output"]
}, Open  ]],
Cell[576729, 13873, 123, 1, 40, "Item"],
Cell[CellGroupData[{
Cell[576877, 13878, 342, 9, 42, "Input"],
Cell[577222, 13889, 780, 21, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578039, 13915, 125, 1, 40, "Item"],
Cell[578167, 13918, 225, 3, 40, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578429, 13926, 523, 12, 42, "Input"],
Cell[578955, 13940, 2989, 58, 349, "Output"]
}, Open  ]],
Cell[581959, 14001, 92, 1, 42, "Input"],
Cell[582054, 14004, 118, 2, 69, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
